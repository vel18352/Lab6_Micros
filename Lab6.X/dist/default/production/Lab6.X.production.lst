

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 27 22:50:36 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31     0000                     
    32                           ; Version 2.40
    33                           ; Generated 17/11/2021 GMT
    34                           ; 
    35                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67     0000                     	;# 
    68     0001                     	;# 
    69     0002                     	;# 
    70     0003                     	;# 
    71     0004                     	;# 
    72     0005                     	;# 
    73     0006                     	;# 
    74     0007                     	;# 
    75     0008                     	;# 
    76     0009                     	;# 
    77     000A                     	;# 
    78     000B                     	;# 
    79     000C                     	;# 
    80     000D                     	;# 
    81     000E                     	;# 
    82     000E                     	;# 
    83     000F                     	;# 
    84     0010                     	;# 
    85     0011                     	;# 
    86     0012                     	;# 
    87     0013                     	;# 
    88     0014                     	;# 
    89     0015                     	;# 
    90     0015                     	;# 
    91     0016                     	;# 
    92     0017                     	;# 
    93     0018                     	;# 
    94     0019                     	;# 
    95     001A                     	;# 
    96     001B                     	;# 
    97     001B                     	;# 
    98     001C                     	;# 
    99     001D                     	;# 
   100     001E                     	;# 
   101     001F                     	;# 
   102     0081                     	;# 
   103     0085                     	;# 
   104     0086                     	;# 
   105     0087                     	;# 
   106     0088                     	;# 
   107     0089                     	;# 
   108     008C                     	;# 
   109     008D                     	;# 
   110     008E                     	;# 
   111     008F                     	;# 
   112     0090                     	;# 
   113     0091                     	;# 
   114     0092                     	;# 
   115     0093                     	;# 
   116     0093                     	;# 
   117     0093                     	;# 
   118     0094                     	;# 
   119     0095                     	;# 
   120     0096                     	;# 
   121     0097                     	;# 
   122     0098                     	;# 
   123     0099                     	;# 
   124     009A                     	;# 
   125     009B                     	;# 
   126     009C                     	;# 
   127     009D                     	;# 
   128     009E                     	;# 
   129     009F                     	;# 
   130     0105                     	;# 
   131     0107                     	;# 
   132     0108                     	;# 
   133     0109                     	;# 
   134     010C                     	;# 
   135     010C                     	;# 
   136     010D                     	;# 
   137     010E                     	;# 
   138     010F                     	;# 
   139     0185                     	;# 
   140     0187                     	;# 
   141     0188                     	;# 
   142     0189                     	;# 
   143     018C                     	;# 
   144     018D                     	;# 
   145     0000                     	;# 
   146     0001                     	;# 
   147     0002                     	;# 
   148     0003                     	;# 
   149     0004                     	;# 
   150     0005                     	;# 
   151     0006                     	;# 
   152     0007                     	;# 
   153     0008                     	;# 
   154     0009                     	;# 
   155     000A                     	;# 
   156     000B                     	;# 
   157     000C                     	;# 
   158     000D                     	;# 
   159     000E                     	;# 
   160     000E                     	;# 
   161     000F                     	;# 
   162     0010                     	;# 
   163     0011                     	;# 
   164     0012                     	;# 
   165     0013                     	;# 
   166     0014                     	;# 
   167     0015                     	;# 
   168     0015                     	;# 
   169     0016                     	;# 
   170     0017                     	;# 
   171     0018                     	;# 
   172     0019                     	;# 
   173     001A                     	;# 
   174     001B                     	;# 
   175     001B                     	;# 
   176     001C                     	;# 
   177     001D                     	;# 
   178     001E                     	;# 
   179     001F                     	;# 
   180     0081                     	;# 
   181     0085                     	;# 
   182     0086                     	;# 
   183     0087                     	;# 
   184     0088                     	;# 
   185     0089                     	;# 
   186     008C                     	;# 
   187     008D                     	;# 
   188     008E                     	;# 
   189     008F                     	;# 
   190     0090                     	;# 
   191     0091                     	;# 
   192     0092                     	;# 
   193     0093                     	;# 
   194     0093                     	;# 
   195     0093                     	;# 
   196     0094                     	;# 
   197     0095                     	;# 
   198     0096                     	;# 
   199     0097                     	;# 
   200     0098                     	;# 
   201     0099                     	;# 
   202     009A                     	;# 
   203     009B                     	;# 
   204     009C                     	;# 
   205     009D                     	;# 
   206     009E                     	;# 
   207     009F                     	;# 
   208     0105                     	;# 
   209     0107                     	;# 
   210     0108                     	;# 
   211     0109                     	;# 
   212     010C                     	;# 
   213     010C                     	;# 
   214     010D                     	;# 
   215     010E                     	;# 
   216     010F                     	;# 
   217     0185                     	;# 
   218     0187                     	;# 
   219     0188                     	;# 
   220     0189                     	;# 
   221     018C                     	;# 
   222     018D                     	;# 
   223                           
   224                           	psect	idataCOMMON
   225     03C9                     __pidataCOMMON:
   226                           
   227                           ;initializer for _TMR0_Pre
   228     03C9  34FF               	retlw	255
   229                           
   230                           	psect	idataBANK0
   231     03B5                     __pidataBANK0:
   232                           
   233                           ;initializer for _Tabla_Display
   234     03B5  34C0               	retlw	192
   235     03B6  34F9               	retlw	249
   236     03B7  3424               	retlw	36
   237     03B8  3430               	retlw	48
   238     03B9  3419               	retlw	25
   239     03BA  3412               	retlw	18
   240     03BB  3402               	retlw	2
   241     03BC  34F8               	retlw	248
   242     03BD  3400               	retlw	0
   243     03BE  3410               	retlw	16
   244     001F                     _ADCON0bits	set	31
   245     001F                     _ADCON0	set	31
   246     0006                     _PORTB	set	6
   247     0005                     _PORTA	set	5
   248     001E                     _ADRESH	set	30
   249     0001                     _TMR0	set	1
   250     0008                     _PORTD	set	8
   251     0007                     _PORTC	set	7
   252     005F                     _GIE	set	95
   253     005E                     _PEIE	set	94
   254     005D                     _T0IE	set	93
   255     0066                     _ADIF	set	102
   256     0047                     _RD7	set	71
   257     005A                     _T0IF	set	90
   258     009F                     _ADCON1bits	set	159
   259     0088                     _TRISD	set	136
   260     0087                     _TRISC	set	135
   261     0086                     _TRISB	set	134
   262     0085                     _TRISA	set	133
   263     0408                     _PS0	set	1032
   264     0409                     _PS1	set	1033
   265     040A                     _PS2	set	1034
   266     040B                     _PSA	set	1035
   267     040D                     _T0CS	set	1037
   268     0466                     _ADIE	set	1126
   269     0189                     _ANSELH	set	393
   270     0188                     _ANSEL	set	392
   271                           
   272                           	psect	cinit
   273     0011                     start_initialization:	
   274                           ; #config settings
   275                           
   276     0011                     __initialization:
   277                           
   278                           ; Initialize objects allocated to BANK0
   279     0011  1383               	bcf	3,7	;select IRP bank0
   280     0012  3045               	movlw	low (__pdataBANK0+10)
   281     0013  00FD               	movwf	btemp+-1
   282     0014  3003               	movlw	high __pidataBANK0
   283     0015  00FE               	movwf	btemp
   284     0016  30B5               	movlw	low __pidataBANK0
   285     0017  00FF               	movwf	btemp+1
   286     0018  303B               	movlw	low __pdataBANK0
   287     0019  0084               	movwf	4
   288     001A  120A  118A  238E  120A  118A  	fcall	init_ram0
   289                           
   290                           ; Initialize objects allocated to COMMON
   291     001F  120A  118A  23C9  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   292     0024  00F8               	movwf	__pdataCOMMON& (0+127)
   293                           
   294                           ; Clear objects allocated to BANK0
   295     0025  01C5               	clrf	__pbssBANK0& (0+127)
   296     0026  01C6               	clrf	(__pbssBANK0+1)& (0+127)
   297     0027  01C7               	clrf	(__pbssBANK0+2)& (0+127)
   298     0028  01C8               	clrf	(__pbssBANK0+3)& (0+127)
   299     0029  01C9               	clrf	(__pbssBANK0+4)& (0+127)
   300     002A  01CA               	clrf	(__pbssBANK0+5)& (0+127)
   301     002B  01CB               	clrf	(__pbssBANK0+6)& (0+127)
   302     002C  01CC               	clrf	(__pbssBANK0+7)& (0+127)
   303     002D  01CD               	clrf	(__pbssBANK0+8)& (0+127)
   304                           
   305                           ; Clear objects allocated to COMMON
   306     002E  01F5               	clrf	__pbssCOMMON& (0+127)
   307     002F  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   308     0030  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   309     0031                     end_of_initialization:	
   310                           ;End of C runtime variable initialization code
   311                           
   312     0031                     __end_of__initialization:
   313     0031  0183               	clrf	3
   314     0032  120A  118A  2A5A   	ljmp	_main	;jump to C main() function
   315                           
   316                           	psect	bssCOMMON
   317     0075                     __pbssCOMMON:
   318     0075                     _Miles:
   319     0075                     	ds	1
   320     0076                     _Bandera_Display:
   321     0076                     	ds	1
   322     0077                     _Bandera_ADC:
   323     0077                     	ds	1
   324                           
   325                           	psect	dataCOMMON
   326     0078                     __pdataCOMMON:
   327     0078                     _TMR0_Pre:
   328     0078                     	ds	1
   329                           
   330                           	psect	bssBANK0
   331     0045                     __pbssBANK0:
   332     0045                     _ValorDC:
   333     0045                     	ds	2
   334     0047                     _ADC2:
   335     0047                     	ds	2
   336     0049                     _ADC1:
   337     0049                     	ds	2
   338     004B                     _Unidades:
   339     004B                     	ds	1
   340     004C                     _Decenas:
   341     004C                     	ds	1
   342     004D                     _Centenas:
   343     004D                     	ds	1
   344                           
   345                           	psect	dataBANK0
   346     003B                     __pdataBANK0:
   347     003B                     _Tabla_Display:
   348     003B                     	ds	10
   349                           
   350                           	psect	inittext
   351     038A                     init_fetch0:	
   352                           ;	Called with low address in FSR and high address in W
   353                           
   354     038A  087E               	movf	btemp,w
   355     038B  008A               	movwf	10
   356     038C  087F               	movf	btemp+1,w
   357     038D  0082               	movwf	2
   358     038E                     init_ram0:	
   359                           ;Called with:
   360                           ;	high address of idata address in btemp 
   361                           ;	low address of idata address in btemp+1 
   362                           ;	low address of data in FSR
   363                           ;	high address + 1 of data in btemp-1
   364                           
   365     038E  120A  118A  238A  120A  118A  	fcall	init_fetch0
   366     0393  0080               	movwf	0
   367     0394  0A84               	incf	4,f
   368     0395  0804               	movf	4,w
   369     0396  067D               	xorwf	btemp+-1,w
   370     0397  1903               	btfsc	3,2
   371     0398  3400               	retlw	0
   372     0399  0AFF               	incf	btemp+1,f
   373     039A  1903               	btfsc	3,2
   374     039B  0AFE               	incf	btemp,f
   375     039C  2B8E               	goto	init_ram0
   376                           
   377                           	psect	cstackCOMMON
   378     0070                     __pcstackCOMMON:
   379     0070                     ?_isr:
   380     0070                     ??_isr:	
   381                           ; 1 bytes @ 0x0
   382                           
   383     0070                     ?_Setup:	
   384                           ; 1 bytes @ 0x0
   385                           
   386     0070                     ?_Int_Enable:	
   387                           ; 1 bytes @ 0x0
   388                           
   389     0070                     ?_TMR0_Config:	
   390                           ; 1 bytes @ 0x0
   391                           
   392     0070                     ?_ADC_Int:	
   393                           ; 1 bytes @ 0x0
   394                           
   395     0070                     ?_ADC_Change:	
   396                           ; 1 bytes @ 0x0
   397                           
   398     0070                     ?_main:	
   399                           ; 1 bytes @ 0x0
   400                           
   401                           
   402                           ; 1 bytes @ 0x0
   403     0070                     	ds	5
   404     0075                     ??_Setup:
   405     0075                     ??_Int_Enable:	
   406                           ; 1 bytes @ 0x5
   407                           
   408     0075                     ??_TMR0_Config:	
   409                           ; 1 bytes @ 0x5
   410                           
   411     0075                     ??_ADC_Int:	
   412                           ; 1 bytes @ 0x5
   413                           
   414     0075                     ??_ADC_Change:	
   415                           ; 1 bytes @ 0x5
   416                           
   417     0075                     ??_main:	
   418                           ; 1 bytes @ 0x5
   419                           
   420                           
   421                           	psect	cstackBANK0
   422     0020                     __pcstackBANK0:	
   423                           ; 1 bytes @ 0x5
   424                           
   425     0020                     ?_ADC_Select:
   426     0020                     ?___awmod:	
   427                           ; 1 bytes @ 0x0
   428                           
   429     0020                     ?___lmul:	
   430                           ; 2 bytes @ 0x0
   431                           
   432     0020                     ADC_Select@channel:	
   433                           ; 4 bytes @ 0x0
   434                           
   435     0020                     ___awmod@divisor:	
   436                           ; 2 bytes @ 0x0
   437                           
   438     0020                     ___lmul@multiplier:	
   439                           ; 2 bytes @ 0x0
   440                           
   441                           
   442                           ; 4 bytes @ 0x0
   443     0020                     	ds	2
   444     0022                     ??_ADC_Select:
   445     0022                     ___awmod@dividend:	
   446                           ; 1 bytes @ 0x2
   447                           
   448                           
   449                           ; 2 bytes @ 0x2
   450     0022                     	ds	2
   451     0024                     ??___awmod:
   452     0024                     ___lmul@multiplicand:	
   453                           ; 1 bytes @ 0x4
   454                           
   455                           
   456                           ; 4 bytes @ 0x4
   457     0024                     	ds	1
   458     0025                     ___awmod@counter:
   459                           
   460                           ; 1 bytes @ 0x5
   461     0025                     	ds	1
   462     0026                     ___awmod@sign:
   463                           
   464                           ; 1 bytes @ 0x6
   465     0026                     	ds	1
   466     0027                     ?___awdiv:
   467     0027                     ___awdiv@divisor:	
   468                           ; 2 bytes @ 0x7
   469                           
   470                           
   471                           ; 2 bytes @ 0x7
   472     0027                     	ds	1
   473     0028                     ??___lmul:
   474                           
   475                           ; 1 bytes @ 0x8
   476     0028                     	ds	1
   477     0029                     ___awdiv@dividend:
   478     0029                     ___lmul@product:	
   479                           ; 2 bytes @ 0x9
   480                           
   481                           
   482                           ; 4 bytes @ 0x9
   483     0029                     	ds	2
   484     002B                     ??___awdiv:
   485                           
   486                           ; 1 bytes @ 0xB
   487     002B                     	ds	1
   488     002C                     ___awdiv@counter:
   489                           
   490                           ; 1 bytes @ 0xC
   491     002C                     	ds	1
   492     002D                     ?___lldiv:
   493     002D                     ___awdiv@sign:	
   494                           ; 4 bytes @ 0xD
   495                           
   496     002D                     ___lldiv@divisor:	
   497                           ; 1 bytes @ 0xD
   498                           
   499                           
   500                           ; 4 bytes @ 0xD
   501     002D                     	ds	1
   502     002E                     ___awdiv@quotient:
   503                           
   504                           ; 2 bytes @ 0xE
   505     002E                     	ds	2
   506     0030                     ?_Separar_Valores:
   507     0030                     Separar_Valores@Valor:	
   508                           ; 1 bytes @ 0x10
   509                           
   510                           
   511                           ; 2 bytes @ 0x10
   512     0030                     	ds	1
   513     0031                     ___lldiv@dividend:
   514                           
   515                           ; 4 bytes @ 0x11
   516     0031                     	ds	1
   517     0032                     ??_Separar_Valores:
   518                           
   519                           ; 1 bytes @ 0x12
   520     0032                     	ds	3
   521     0035                     ??___lldiv:
   522                           
   523                           ; 1 bytes @ 0x15
   524     0035                     	ds	1
   525     0036                     ___lldiv@quotient:
   526                           
   527                           ; 4 bytes @ 0x16
   528     0036                     	ds	4
   529     003A                     ___lldiv@counter:
   530                           
   531                           ; 1 bytes @ 0x1A
   532     003A                     	ds	1
   533                           
   534                           	psect	maintext
   535     025A                     __pmaintext:	
   536 ;;
   537 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   538 ;;
   539 ;; *************** function _main *****************
   540 ;; Defined at:
   541 ;;		line 214 in file "Lab6.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg, status,2, status,0, pclath, cstack
   550 ;; Tracked objects:
   551 ;;		On entry : B00/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   555 ;;      Params:         0       0       0       0       0
   556 ;;      Locals:         0       0       0       0       0
   557 ;;      Temps:          0       0       0       0       0
   558 ;;      Totals:         0       0       0       0       0
   559 ;;Total ram usage:        0 bytes
   560 ;; Hardware stack levels required when called: 3
   561 ;; This function calls:
   562 ;;		_ADC_Change
   563 ;;		_ADC_Int
   564 ;;		_Int_Enable
   565 ;;		_Separar_Valores
   566 ;;		_Setup
   567 ;;		_TMR0_Config
   568 ;;		___lldiv
   569 ;;		___lmul
   570 ;; This function is called by:
   571 ;;		Startup code after reset
   572 ;; This function uses a non-reentrant model
   573 ;;
   574                           
   575     025A                     _main:	
   576                           ;psect for function _main
   577                           
   578     025A                     l1267:	
   579                           ;incstack = 0
   580                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   581                           
   582                           
   583                           ;Lab6.c: 216:     Setup();
   584     025A  120A  118A  236B  120A  118A  	fcall	_Setup
   585     025F                     l1269:
   586                           
   587                           ;Lab6.c: 217:     Int_Enable();
   588     025F  120A  118A  23AA  120A  118A  	fcall	_Int_Enable
   589     0264                     l1271:
   590                           
   591                           ;Lab6.c: 218:     TMR0_Config();
   592     0264  120A  118A  239D  120A  118A  	fcall	_TMR0_Config
   593     0269                     l1273:
   594                           
   595                           ;Lab6.c: 219:     ADC_Int();
   596     0269  120A  118A  23BF  120A  118A  	fcall	_ADC_Int
   597     026E                     l1275:
   598                           
   599                           ;Lab6.c: 221:     {;Lab6.c: 222:         ADC_Change();
   600     026E  120A  118A  2345  120A  118A  	fcall	_ADC_Change
   601     0273                     l1277:
   602                           
   603                           ;Lab6.c: 223:         PORTB = ADC1;
   604     0273  1283               	bcf	3,5	;RP0=0, select bank0
   605     0274  1303               	bcf	3,6	;RP1=0, select bank0
   606     0275  0849               	movf	_ADC1,w
   607     0276  0086               	movwf	6	;volatile
   608                           
   609                           ;Lab6.c: 224:         ValorDC = (uint16_t)((uint32_t)ADC2 * 500 / 255);
   610     0277  3000               	movlw	0
   611     0278  00B0               	movwf	___lldiv@divisor+3
   612     0279  3000               	movlw	0
   613     027A  00AF               	movwf	___lldiv@divisor+2
   614     027B  3000               	movlw	0
   615     027C  00AE               	movwf	___lldiv@divisor+1
   616     027D  30FF               	movlw	255
   617     027E  00AD               	movwf	___lldiv@divisor
   618     027F  0847               	movf	_ADC2,w
   619     0280  00A0               	movwf	___lmul@multiplier
   620     0281  0848               	movf	_ADC2+1,w
   621     0282  00A1               	movwf	___lmul@multiplier+1
   622     0283  01A2               	clrf	___lmul@multiplier+2
   623     0284  01A3               	clrf	___lmul@multiplier+3
   624     0285  3000               	movlw	0
   625     0286  00A7               	movwf	___lmul@multiplicand+3
   626     0287  3000               	movlw	0
   627     0288  00A6               	movwf	___lmul@multiplicand+2
   628     0289  3001               	movlw	1
   629     028A  00A5               	movwf	___lmul@multiplicand+1
   630     028B  30F4               	movlw	244
   631     028C  00A4               	movwf	___lmul@multiplicand
   632     028D  120A  118A  22FD  120A  118A  	fcall	___lmul
   633     0292  1283               	bcf	3,5	;RP0=0, select bank0
   634     0293  1303               	bcf	3,6	;RP1=0, select bank0
   635     0294  0823               	movf	?___lmul+3,w
   636     0295  00B4               	movwf	___lldiv@dividend+3
   637     0296  0822               	movf	?___lmul+2,w
   638     0297  00B3               	movwf	___lldiv@dividend+2
   639     0298  0821               	movf	?___lmul+1,w
   640     0299  00B2               	movwf	___lldiv@dividend+1
   641     029A  0820               	movf	?___lmul,w
   642     029B  00B1               	movwf	___lldiv@dividend
   643     029C  120A  118A  2197  120A  118A  	fcall	___lldiv
   644     02A1  1283               	bcf	3,5	;RP0=0, select bank0
   645     02A2  1303               	bcf	3,6	;RP1=0, select bank0
   646     02A3  082E               	movf	?___lldiv+1,w
   647     02A4  00C6               	movwf	_ValorDC+1
   648     02A5  082D               	movf	?___lldiv,w
   649     02A6  00C5               	movwf	_ValorDC
   650                           
   651                           ;Lab6.c: 225:         Separar_Valores(ValorDC);
   652     02A7  0846               	movf	_ValorDC+1,w
   653     02A8  00B1               	movwf	Separar_Valores@Valor+1
   654     02A9  0845               	movf	_ValorDC,w
   655     02AA  00B0               	movwf	Separar_Valores@Valor
   656     02AB  120A  118A  2035  120A  118A  	fcall	_Separar_Valores
   657     02B0  2A6E               	goto	l1275
   658     02B1  120A  118A  280E   	ljmp	start
   659     02B4                     __end_of_main:
   660                           
   661                           	psect	text1
   662     02FD                     __ptext1:	
   663 ;; *************** function ___lmul *****************
   664 ;; Defined at:
   665 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;  multiplier      4    0[BANK0 ] unsigned long 
   668 ;;  multiplicand    4    4[BANK0 ] unsigned long 
   669 ;; Auto vars:     Size  Location     Type
   670 ;;  product         4    9[BANK0 ] unsigned long 
   671 ;; Return value:  Size  Location     Type
   672 ;;                  4    0[BANK0 ] unsigned long 
   673 ;; Registers used:
   674 ;;		wreg, status,2, status,0
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   680 ;;      Params:         0       8       0       0       0
   681 ;;      Locals:         0       4       0       0       0
   682 ;;      Temps:          0       1       0       0       0
   683 ;;      Totals:         0      13       0       0       0
   684 ;;Total ram usage:       13 bytes
   685 ;; Hardware stack levels used: 1
   686 ;; Hardware stack levels required when called: 1
   687 ;; This function calls:
   688 ;;		Nothing
   689 ;; This function is called by:
   690 ;;		_main
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694     02FD                     ___lmul:	
   695                           ;psect for function ___lmul
   696                           
   697     02FD                     l1229:	
   698                           ;incstack = 0
   699                           ; Regs used in ___lmul: [wreg+status,2+status,0]
   700                           
   701     02FD  3000               	movlw	0
   702     02FE  1283               	bcf	3,5	;RP0=0, select bank0
   703     02FF  1303               	bcf	3,6	;RP1=0, select bank0
   704     0300  00AC               	movwf	___lmul@product+3
   705     0301  3000               	movlw	0
   706     0302  00AB               	movwf	___lmul@product+2
   707     0303  3000               	movlw	0
   708     0304  00AA               	movwf	___lmul@product+1
   709     0305  3000               	movlw	0
   710     0306  00A9               	movwf	___lmul@product
   711     0307                     l1231:
   712     0307  1C20               	btfss	___lmul@multiplier,0
   713     0308  2B0A               	goto	u991
   714     0309  2B0B               	goto	u990
   715     030A                     u991:
   716     030A  2B22               	goto	l1235
   717     030B                     u990:
   718     030B                     l1233:
   719     030B  0824               	movf	___lmul@multiplicand,w
   720     030C  07A9               	addwf	___lmul@product,f
   721     030D  0825               	movf	___lmul@multiplicand+1,w
   722     030E  1103               	clrz
   723     030F  1803               	skipnc
   724     0310  3E01               	addlw	1
   725     0311  1903               	skipnz
   726     0312  2B14               	goto	u1001
   727     0313  07AA               	addwf	___lmul@product+1,f
   728     0314                     u1001:
   729     0314  0826               	movf	___lmul@multiplicand+2,w
   730     0315  1103               	clrz
   731     0316  1803               	skipnc
   732     0317  3E01               	addlw	1
   733     0318  1903               	skipnz
   734     0319  2B1B               	goto	u1002
   735     031A  07AB               	addwf	___lmul@product+2,f
   736     031B                     u1002:
   737     031B  0827               	movf	___lmul@multiplicand+3,w
   738     031C  1103               	clrz
   739     031D  1803               	skipnc
   740     031E  3E01               	addlw	1
   741     031F  1903               	skipnz
   742     0320  2B22               	goto	u1003
   743     0321  07AC               	addwf	___lmul@product+3,f
   744     0322                     u1003:
   745     0322                     l1235:
   746     0322  3001               	movlw	1
   747     0323  00A8               	movwf	??___lmul
   748     0324                     u1015:
   749     0324  1003               	clrc
   750     0325  0DA4               	rlf	___lmul@multiplicand,f
   751     0326  0DA5               	rlf	___lmul@multiplicand+1,f
   752     0327  0DA6               	rlf	___lmul@multiplicand+2,f
   753     0328  0DA7               	rlf	___lmul@multiplicand+3,f
   754     0329  0BA8               	decfsz	??___lmul,f
   755     032A  2B24               	goto	u1015
   756     032B                     l1237:
   757     032B  3001               	movlw	1
   758     032C                     u1025:
   759     032C  1003               	clrc
   760     032D  0CA3               	rrf	___lmul@multiplier+3,f
   761     032E  0CA2               	rrf	___lmul@multiplier+2,f
   762     032F  0CA1               	rrf	___lmul@multiplier+1,f
   763     0330  0CA0               	rrf	___lmul@multiplier,f
   764     0331  3EFF               	addlw	-1
   765     0332  1D03               	skipz
   766     0333  2B2C               	goto	u1025
   767     0334  0823               	movf	___lmul@multiplier+3,w
   768     0335  0422               	iorwf	___lmul@multiplier+2,w
   769     0336  0421               	iorwf	___lmul@multiplier+1,w
   770     0337  0420               	iorwf	___lmul@multiplier,w
   771     0338  1D03               	skipz
   772     0339  2B3B               	goto	u1031
   773     033A  2B3C               	goto	u1030
   774     033B                     u1031:
   775     033B  2B07               	goto	l1231
   776     033C                     u1030:
   777     033C                     l1239:
   778     033C  082C               	movf	___lmul@product+3,w
   779     033D  00A3               	movwf	?___lmul+3
   780     033E  082B               	movf	___lmul@product+2,w
   781     033F  00A2               	movwf	?___lmul+2
   782     0340  082A               	movf	___lmul@product+1,w
   783     0341  00A1               	movwf	?___lmul+1
   784     0342  0829               	movf	___lmul@product,w
   785     0343  00A0               	movwf	?___lmul
   786     0344                     l227:
   787     0344  0008               	return
   788     0345                     __end_of___lmul:
   789                           
   790                           	psect	text2
   791     0197                     __ptext2:	
   792 ;; *************** function ___lldiv *****************
   793 ;; Defined at:
   794 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;  divisor         4   13[BANK0 ] unsigned long 
   797 ;;  dividend        4   17[BANK0 ] unsigned long 
   798 ;; Auto vars:     Size  Location     Type
   799 ;;  quotient        4   22[BANK0 ] unsigned long 
   800 ;;  counter         1   26[BANK0 ] unsigned char 
   801 ;; Return value:  Size  Location     Type
   802 ;;                  4   13[BANK0 ] unsigned long 
   803 ;; Registers used:
   804 ;;		wreg, status,2, status,0
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   810 ;;      Params:         0       8       0       0       0
   811 ;;      Locals:         0       5       0       0       0
   812 ;;      Temps:          0       1       0       0       0
   813 ;;      Totals:         0      14       0       0       0
   814 ;;Total ram usage:       14 bytes
   815 ;; Hardware stack levels used: 1
   816 ;; Hardware stack levels required when called: 1
   817 ;; This function calls:
   818 ;;		Nothing
   819 ;; This function is called by:
   820 ;;		_main
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824     0197                     ___lldiv:	
   825                           ;psect for function ___lldiv
   826                           
   827     0197                     l1243:	
   828                           ;incstack = 0
   829                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
   830                           
   831     0197  3000               	movlw	0
   832     0198  1283               	bcf	3,5	;RP0=0, select bank0
   833     0199  1303               	bcf	3,6	;RP1=0, select bank0
   834     019A  00B9               	movwf	___lldiv@quotient+3
   835     019B  3000               	movlw	0
   836     019C  00B8               	movwf	___lldiv@quotient+2
   837     019D  3000               	movlw	0
   838     019E  00B7               	movwf	___lldiv@quotient+1
   839     019F  3000               	movlw	0
   840     01A0  00B6               	movwf	___lldiv@quotient
   841     01A1  0830               	movf	___lldiv@divisor+3,w
   842     01A2  042F               	iorwf	___lldiv@divisor+2,w
   843     01A3  042E               	iorwf	___lldiv@divisor+1,w
   844     01A4  042D               	iorwf	___lldiv@divisor,w
   845     01A5  1903               	skipnz
   846     01A6  29A8               	goto	u1041
   847     01A7  29A9               	goto	u1040
   848     01A8                     u1041:
   849     01A8  29F6               	goto	l1263
   850     01A9                     u1040:
   851     01A9                     l1245:
   852     01A9  01BA               	clrf	___lldiv@counter
   853     01AA  0ABA               	incf	___lldiv@counter,f
   854     01AB  29B9               	goto	l1249
   855     01AC                     l1247:
   856     01AC  3001               	movlw	1
   857     01AD  00B5               	movwf	??___lldiv
   858     01AE                     u1055:
   859     01AE  1003               	clrc
   860     01AF  0DAD               	rlf	___lldiv@divisor,f
   861     01B0  0DAE               	rlf	___lldiv@divisor+1,f
   862     01B1  0DAF               	rlf	___lldiv@divisor+2,f
   863     01B2  0DB0               	rlf	___lldiv@divisor+3,f
   864     01B3  0BB5               	decfsz	??___lldiv,f
   865     01B4  29AE               	goto	u1055
   866     01B5  3001               	movlw	1
   867     01B6  00B5               	movwf	??___lldiv
   868     01B7  0835               	movf	??___lldiv,w
   869     01B8  07BA               	addwf	___lldiv@counter,f
   870     01B9                     l1249:
   871     01B9  1FB0               	btfss	___lldiv@divisor+3,7
   872     01BA  29BC               	goto	u1061
   873     01BB  29BD               	goto	u1060
   874     01BC                     u1061:
   875     01BC  29AC               	goto	l1247
   876     01BD                     u1060:
   877     01BD                     l1251:
   878     01BD  3001               	movlw	1
   879     01BE  00B5               	movwf	??___lldiv
   880     01BF                     u1075:
   881     01BF  1003               	clrc
   882     01C0  0DB6               	rlf	___lldiv@quotient,f
   883     01C1  0DB7               	rlf	___lldiv@quotient+1,f
   884     01C2  0DB8               	rlf	___lldiv@quotient+2,f
   885     01C3  0DB9               	rlf	___lldiv@quotient+3,f
   886     01C4  0BB5               	decfsz	??___lldiv,f
   887     01C5  29BF               	goto	u1075
   888     01C6                     l1253:
   889     01C6  0830               	movf	___lldiv@divisor+3,w
   890     01C7  0234               	subwf	___lldiv@dividend+3,w
   891     01C8  1D03               	skipz
   892     01C9  29D4               	goto	u1085
   893     01CA  082F               	movf	___lldiv@divisor+2,w
   894     01CB  0233               	subwf	___lldiv@dividend+2,w
   895     01CC  1D03               	skipz
   896     01CD  29D4               	goto	u1085
   897     01CE  082E               	movf	___lldiv@divisor+1,w
   898     01CF  0232               	subwf	___lldiv@dividend+1,w
   899     01D0  1D03               	skipz
   900     01D1  29D4               	goto	u1085
   901     01D2  082D               	movf	___lldiv@divisor,w
   902     01D3  0231               	subwf	___lldiv@dividend,w
   903     01D4                     u1085:
   904     01D4  1C03               	skipc
   905     01D5  29D7               	goto	u1081
   906     01D6  29D8               	goto	u1080
   907     01D7                     u1081:
   908     01D7  29E7               	goto	l1259
   909     01D8                     u1080:
   910     01D8                     l1255:
   911     01D8  082D               	movf	___lldiv@divisor,w
   912     01D9  02B1               	subwf	___lldiv@dividend,f
   913     01DA  082E               	movf	___lldiv@divisor+1,w
   914     01DB  1C03               	skipc
   915     01DC  0F2E               	incfsz	___lldiv@divisor+1,w
   916     01DD  02B2               	subwf	___lldiv@dividend+1,f
   917     01DE  082F               	movf	___lldiv@divisor+2,w
   918     01DF  1C03               	skipc
   919     01E0  0F2F               	incfsz	___lldiv@divisor+2,w
   920     01E1  02B3               	subwf	___lldiv@dividend+2,f
   921     01E2  0830               	movf	___lldiv@divisor+3,w
   922     01E3  1C03               	skipc
   923     01E4  0F30               	incfsz	___lldiv@divisor+3,w
   924     01E5  02B4               	subwf	___lldiv@dividend+3,f
   925     01E6                     l1257:
   926     01E6  1436               	bsf	___lldiv@quotient,0
   927     01E7                     l1259:
   928     01E7  3001               	movlw	1
   929     01E8                     u1095:
   930     01E8  1003               	clrc
   931     01E9  0CB0               	rrf	___lldiv@divisor+3,f
   932     01EA  0CAF               	rrf	___lldiv@divisor+2,f
   933     01EB  0CAE               	rrf	___lldiv@divisor+1,f
   934     01EC  0CAD               	rrf	___lldiv@divisor,f
   935     01ED  3EFF               	addlw	-1
   936     01EE  1D03               	skipz
   937     01EF  29E8               	goto	u1095
   938     01F0                     l1261:
   939     01F0  3001               	movlw	1
   940     01F1  02BA               	subwf	___lldiv@counter,f
   941     01F2  1D03               	btfss	3,2
   942     01F3  29F5               	goto	u1101
   943     01F4  29F6               	goto	u1100
   944     01F5                     u1101:
   945     01F5  29BD               	goto	l1251
   946     01F6                     u1100:
   947     01F6                     l1263:
   948     01F6  0839               	movf	___lldiv@quotient+3,w
   949     01F7  00B0               	movwf	?___lldiv+3
   950     01F8  0838               	movf	___lldiv@quotient+2,w
   951     01F9  00AF               	movwf	?___lldiv+2
   952     01FA  0837               	movf	___lldiv@quotient+1,w
   953     01FB  00AE               	movwf	?___lldiv+1
   954     01FC  0836               	movf	___lldiv@quotient,w
   955     01FD  00AD               	movwf	?___lldiv
   956     01FE                     l249:
   957     01FE  0008               	return
   958     01FF                     __end_of___lldiv:
   959                           
   960                           	psect	text3
   961     039D                     __ptext3:	
   962 ;; *************** function _TMR0_Config *****************
   963 ;; Defined at:
   964 ;;		line 155 in file "Lab6.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;		None
   967 ;; Auto vars:     Size  Location     Type
   968 ;;		None
   969 ;; Return value:  Size  Location     Type
   970 ;;                  1    wreg      void 
   971 ;; Registers used:
   972 ;;		wreg
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   978 ;;      Params:         0       0       0       0       0
   979 ;;      Locals:         0       0       0       0       0
   980 ;;      Temps:          0       0       0       0       0
   981 ;;      Totals:         0       0       0       0       0
   982 ;;Total ram usage:        0 bytes
   983 ;; Hardware stack levels used: 1
   984 ;; Hardware stack levels required when called: 1
   985 ;; This function calls:
   986 ;;		Nothing
   987 ;; This function is called by:
   988 ;;		_main
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992     039D                     _TMR0_Config:	
   993                           ;psect for function _TMR0_Config
   994                           
   995     039D                     l1039:	
   996                           ;incstack = 0
   997                           ; Regs used in _TMR0_Config: [wreg]
   998                           
   999                           
  1000                           ;Lab6.c: 157:     T0CS = 0;
  1001     039D  1683               	bsf	3,5	;RP0=1, select bank1
  1002     039E  1303               	bcf	3,6	;RP1=0, select bank1
  1003     039F  1281               	bcf	1,5	;volatile
  1004                           
  1005                           ;Lab6.c: 158:     PSA = 0;
  1006     03A0  1181               	bcf	1,3	;volatile
  1007                           
  1008                           ;Lab6.c: 159:     PS2 = 1;
  1009     03A1  1501               	bsf	1,2	;volatile
  1010                           
  1011                           ;Lab6.c: 160:     PS1 = 1;
  1012     03A2  1481               	bsf	1,1	;volatile
  1013                           
  1014                           ;Lab6.c: 161:     PS0 = 1;
  1015     03A3  1401               	bsf	1,0	;volatile
  1016     03A4                     l1041:
  1017                           
  1018                           ;Lab6.c: 162:     TMR0 = TMR0_Pre;
  1019     03A4  0878               	movf	_TMR0_Pre,w
  1020     03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1021     03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1022     03A7  0081               	movwf	1	;volatile
  1023     03A8                     l1043:
  1024                           
  1025                           ;Lab6.c: 163:     T0IF = 0;
  1026     03A8  110B               	bcf	11,2	;volatile
  1027     03A9                     l101:
  1028     03A9  0008               	return
  1029     03AA                     __end_of_TMR0_Config:
  1030                           
  1031                           	psect	text4
  1032     036B                     __ptext4:	
  1033 ;; *************** function _Setup *****************
  1034 ;; Defined at:
  1035 ;;		line 131 in file "Lab6.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;		None
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      void 
  1042 ;; Registers used:
  1043 ;;		wreg, status,2
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1049 ;;      Params:         0       0       0       0       0
  1050 ;;      Locals:         0       0       0       0       0
  1051 ;;      Temps:          0       0       0       0       0
  1052 ;;      Totals:         0       0       0       0       0
  1053 ;;Total ram usage:        0 bytes
  1054 ;; Hardware stack levels used: 1
  1055 ;; Hardware stack levels required when called: 1
  1056 ;; This function calls:
  1057 ;;		Nothing
  1058 ;; This function is called by:
  1059 ;;		_main
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063     036B                     _Setup:	
  1064                           ;psect for function _Setup
  1065                           
  1066     036B                     l1031:	
  1067                           ;incstack = 0
  1068                           ; Regs used in _Setup: [wreg+status,2]
  1069                           
  1070                           
  1071                           ;Lab6.c: 133:     ANSEL = 0x03;
  1072     036B  3003               	movlw	3
  1073     036C  1683               	bsf	3,5	;RP0=1, select bank3
  1074     036D  1703               	bsf	3,6	;RP1=1, select bank3
  1075     036E  0088               	movwf	8	;volatile
  1076     036F                     l1033:
  1077                           
  1078                           ;Lab6.c: 134:     ANSELH = 0x00;
  1079     036F  0189               	clrf	9	;volatile
  1080     0370                     l1035:
  1081                           
  1082                           ;Lab6.c: 135:     TRISA = 0x03;
  1083     0370  3003               	movlw	3
  1084     0371  1683               	bsf	3,5	;RP0=1, select bank1
  1085     0372  1303               	bcf	3,6	;RP1=0, select bank1
  1086     0373  0085               	movwf	5	;volatile
  1087                           
  1088                           ;Lab6.c: 136:     PORTA = 0;
  1089     0374  1283               	bcf	3,5	;RP0=0, select bank0
  1090     0375  1303               	bcf	3,6	;RP1=0, select bank0
  1091     0376  0185               	clrf	5	;volatile
  1092                           
  1093                           ;Lab6.c: 137:     TRISB = 0;
  1094     0377  1683               	bsf	3,5	;RP0=1, select bank1
  1095     0378  1303               	bcf	3,6	;RP1=0, select bank1
  1096     0379  0186               	clrf	6	;volatile
  1097                           
  1098                           ;Lab6.c: 138:     PORTB = 0;
  1099     037A  1283               	bcf	3,5	;RP0=0, select bank0
  1100     037B  1303               	bcf	3,6	;RP1=0, select bank0
  1101     037C  0186               	clrf	6	;volatile
  1102                           
  1103                           ;Lab6.c: 139:     TRISC = 0;
  1104     037D  1683               	bsf	3,5	;RP0=1, select bank1
  1105     037E  1303               	bcf	3,6	;RP1=0, select bank1
  1106     037F  0187               	clrf	7	;volatile
  1107                           
  1108                           ;Lab6.c: 140:     PORTC = 0;
  1109     0380  1283               	bcf	3,5	;RP0=0, select bank0
  1110     0381  1303               	bcf	3,6	;RP1=0, select bank0
  1111     0382  0187               	clrf	7	;volatile
  1112                           
  1113                           ;Lab6.c: 141:     TRISD = 0;
  1114     0383  1683               	bsf	3,5	;RP0=1, select bank1
  1115     0384  1303               	bcf	3,6	;RP1=0, select bank1
  1116     0385  0188               	clrf	8	;volatile
  1117                           
  1118                           ;Lab6.c: 142:     PORTD = 0;
  1119     0386  1283               	bcf	3,5	;RP0=0, select bank0
  1120     0387  1303               	bcf	3,6	;RP1=0, select bank0
  1121     0388  0188               	clrf	8	;volatile
  1122     0389                     l95:
  1123     0389  0008               	return
  1124     038A                     __end_of_Setup:
  1125                           
  1126                           	psect	text5
  1127     0035                     __ptext5:	
  1128 ;; *************** function _Separar_Valores *****************
  1129 ;; Defined at:
  1130 ;;		line 203 in file "Lab6.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;  Valor           2   16[BANK0 ] int 
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;		None
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, status,2, status,0, pclath, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1144 ;;      Params:         0       2       0       0       0
  1145 ;;      Locals:         0       0       0       0       0
  1146 ;;      Temps:          0       2       0       0       0
  1147 ;;      Totals:         0       4       0       0       0
  1148 ;;Total ram usage:        4 bytes
  1149 ;; Hardware stack levels used: 1
  1150 ;; Hardware stack levels required when called: 2
  1151 ;; This function calls:
  1152 ;;		___awdiv
  1153 ;;		___awmod
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159     0035                     _Separar_Valores:	
  1160                           ;psect for function _Separar_Valores
  1161                           
  1162     0035                     l1225:	
  1163                           ;incstack = 0
  1164                           ; Regs used in _Separar_Valores: [wreg+status,2+status,0+pclath+cstack]
  1165                           
  1166                           
  1167                           ;Lab6.c: 203: void Separar_Valores(int Valor);Lab6.c: 204: {;Lab6.c: 205:     Centenas=(
      +                          Valor%1000-Valor%100)/100;
  1168     0035  3064               	movlw	100
  1169     0036  1283               	bcf	3,5	;RP0=0, select bank0
  1170     0037  1303               	bcf	3,6	;RP1=0, select bank0
  1171     0038  00A7               	movwf	___awdiv@divisor
  1172     0039  3000               	movlw	0
  1173     003A  00A8               	movwf	___awdiv@divisor+1
  1174     003B  30E8               	movlw	232
  1175     003C  00A0               	movwf	___awmod@divisor
  1176     003D  3003               	movlw	3
  1177     003E  00A1               	movwf	___awmod@divisor+1
  1178     003F  0831               	movf	Separar_Valores@Valor+1,w
  1179     0040  00A3               	movwf	___awmod@dividend+1
  1180     0041  0830               	movf	Separar_Valores@Valor,w
  1181     0042  00A2               	movwf	___awmod@dividend
  1182     0043  120A  118A  21FF  120A  118A  	fcall	___awmod
  1183     0048  1283               	bcf	3,5	;RP0=0, select bank0
  1184     0049  1303               	bcf	3,6	;RP1=0, select bank0
  1185     004A  0820               	movf	?___awmod,w
  1186     004B  00B2               	movwf	??_Separar_Valores
  1187     004C  0821               	movf	?___awmod+1,w
  1188     004D  00B3               	movwf	??_Separar_Valores+1
  1189     004E  3064               	movlw	100
  1190     004F  00A0               	movwf	___awmod@divisor
  1191     0050  3000               	movlw	0
  1192     0051  00A1               	movwf	___awmod@divisor+1
  1193     0052  0831               	movf	Separar_Valores@Valor+1,w
  1194     0053  00A3               	movwf	___awmod@dividend+1
  1195     0054  0830               	movf	Separar_Valores@Valor,w
  1196     0055  00A2               	movwf	___awmod@dividend
  1197     0056  120A  118A  21FF  120A  118A  	fcall	___awmod
  1198     005B  1283               	bcf	3,5	;RP0=0, select bank0
  1199     005C  1303               	bcf	3,6	;RP1=0, select bank0
  1200     005D  0820               	movf	?___awmod,w
  1201     005E  0232               	subwf	??_Separar_Valores,w
  1202     005F  00A9               	movwf	___awdiv@dividend
  1203     0060  0821               	movf	?___awmod+1,w
  1204     0061  1C03               	skipc
  1205     0062  0A21               	incf	?___awmod+1,w
  1206     0063  0233               	subwf	??_Separar_Valores+1,w
  1207     0064  00AA               	movwf	___awdiv@dividend+1
  1208     0065  120A  118A  212E  120A  118A  	fcall	___awdiv
  1209     006A  1283               	bcf	3,5	;RP0=0, select bank0
  1210     006B  1303               	bcf	3,6	;RP1=0, select bank0
  1211     006C  0827               	movf	?___awdiv,w
  1212     006D  00CD               	movwf	_Centenas
  1213                           
  1214                           ;Lab6.c: 206:     Decenas=(Valor%100-Valor%10)/10;
  1215     006E  300A               	movlw	10
  1216     006F  00A7               	movwf	___awdiv@divisor
  1217     0070  3000               	movlw	0
  1218     0071  00A8               	movwf	___awdiv@divisor+1
  1219     0072  3064               	movlw	100
  1220     0073  00A0               	movwf	___awmod@divisor
  1221     0074  3000               	movlw	0
  1222     0075  00A1               	movwf	___awmod@divisor+1
  1223     0076  0831               	movf	Separar_Valores@Valor+1,w
  1224     0077  00A3               	movwf	___awmod@dividend+1
  1225     0078  0830               	movf	Separar_Valores@Valor,w
  1226     0079  00A2               	movwf	___awmod@dividend
  1227     007A  120A  118A  21FF  120A  118A  	fcall	___awmod
  1228     007F  1283               	bcf	3,5	;RP0=0, select bank0
  1229     0080  1303               	bcf	3,6	;RP1=0, select bank0
  1230     0081  0820               	movf	?___awmod,w
  1231     0082  00B2               	movwf	??_Separar_Valores
  1232     0083  0821               	movf	?___awmod+1,w
  1233     0084  00B3               	movwf	??_Separar_Valores+1
  1234     0085  300A               	movlw	10
  1235     0086  00A0               	movwf	___awmod@divisor
  1236     0087  3000               	movlw	0
  1237     0088  00A1               	movwf	___awmod@divisor+1
  1238     0089  0831               	movf	Separar_Valores@Valor+1,w
  1239     008A  00A3               	movwf	___awmod@dividend+1
  1240     008B  0830               	movf	Separar_Valores@Valor,w
  1241     008C  00A2               	movwf	___awmod@dividend
  1242     008D  120A  118A  21FF  120A  118A  	fcall	___awmod
  1243     0092  1283               	bcf	3,5	;RP0=0, select bank0
  1244     0093  1303               	bcf	3,6	;RP1=0, select bank0
  1245     0094  0820               	movf	?___awmod,w
  1246     0095  0232               	subwf	??_Separar_Valores,w
  1247     0096  00A9               	movwf	___awdiv@dividend
  1248     0097  0821               	movf	?___awmod+1,w
  1249     0098  1C03               	skipc
  1250     0099  0A21               	incf	?___awmod+1,w
  1251     009A  0233               	subwf	??_Separar_Valores+1,w
  1252     009B  00AA               	movwf	___awdiv@dividend+1
  1253     009C  120A  118A  212E  120A  118A  	fcall	___awdiv
  1254     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1255     00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1256     00A3  0827               	movf	?___awdiv,w
  1257     00A4  00CC               	movwf	_Decenas
  1258                           
  1259                           ;Lab6.c: 207:     Unidades=Valor%10;
  1260     00A5  300A               	movlw	10
  1261     00A6  00A0               	movwf	___awmod@divisor
  1262     00A7  3000               	movlw	0
  1263     00A8  00A1               	movwf	___awmod@divisor+1
  1264     00A9  0831               	movf	Separar_Valores@Valor+1,w
  1265     00AA  00A3               	movwf	___awmod@dividend+1
  1266     00AB  0830               	movf	Separar_Valores@Valor,w
  1267     00AC  00A2               	movwf	___awmod@dividend
  1268     00AD  120A  118A  21FF  120A  118A  	fcall	___awmod
  1269     00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1270     00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1271     00B4  0820               	movf	?___awmod,w
  1272     00B5  00CB               	movwf	_Unidades
  1273     00B6                     l119:
  1274     00B6  0008               	return
  1275     00B7                     __end_of_Separar_Valores:
  1276                           
  1277                           	psect	text6
  1278     01FF                     __ptext6:	
  1279 ;; *************** function ___awmod *****************
  1280 ;; Defined at:
  1281 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  divisor         2    0[BANK0 ] int 
  1284 ;;  dividend        2    2[BANK0 ] int 
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  sign            1    6[BANK0 ] unsigned char 
  1287 ;;  counter         1    5[BANK0 ] unsigned char 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  2    0[BANK0 ] int 
  1290 ;; Registers used:
  1291 ;;		wreg, status,2, status,0
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1297 ;;      Params:         0       4       0       0       0
  1298 ;;      Locals:         0       2       0       0       0
  1299 ;;      Temps:          0       1       0       0       0
  1300 ;;      Totals:         0       7       0       0       0
  1301 ;;Total ram usage:        7 bytes
  1302 ;; Hardware stack levels used: 1
  1303 ;; Hardware stack levels required when called: 1
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_Separar_Valores
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311     01FF                     ___awmod:	
  1312                           ;psect for function ___awmod
  1313                           
  1314     01FF                     l1177:	
  1315                           ;incstack = 0
  1316                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1317                           
  1318     01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1319     0200  1303               	bcf	3,6	;RP1=0, select bank0
  1320     0201  01A6               	clrf	___awmod@sign
  1321     0202                     l1179:
  1322     0202  1FA3               	btfss	___awmod@dividend+1,7
  1323     0203  2A05               	goto	u871
  1324     0204  2A06               	goto	u870
  1325     0205                     u871:
  1326     0205  2A0D               	goto	l1185
  1327     0206                     u870:
  1328     0206                     l1181:
  1329     0206  09A2               	comf	___awmod@dividend,f
  1330     0207  09A3               	comf	___awmod@dividend+1,f
  1331     0208  0AA2               	incf	___awmod@dividend,f
  1332     0209  1903               	skipnz
  1333     020A  0AA3               	incf	___awmod@dividend+1,f
  1334     020B                     l1183:
  1335     020B  01A6               	clrf	___awmod@sign
  1336     020C  0AA6               	incf	___awmod@sign,f
  1337     020D                     l1185:
  1338     020D  1FA1               	btfss	___awmod@divisor+1,7
  1339     020E  2A10               	goto	u881
  1340     020F  2A11               	goto	u880
  1341     0210                     u881:
  1342     0210  2A16               	goto	l1189
  1343     0211                     u880:
  1344     0211                     l1187:
  1345     0211  09A0               	comf	___awmod@divisor,f
  1346     0212  09A1               	comf	___awmod@divisor+1,f
  1347     0213  0AA0               	incf	___awmod@divisor,f
  1348     0214  1903               	skipnz
  1349     0215  0AA1               	incf	___awmod@divisor+1,f
  1350     0216                     l1189:
  1351     0216  0820               	movf	___awmod@divisor,w
  1352     0217  0421               	iorwf	___awmod@divisor+1,w
  1353     0218  1903               	btfsc	3,2
  1354     0219  2A1B               	goto	u891
  1355     021A  2A1C               	goto	u890
  1356     021B                     u891:
  1357     021B  2A4B               	goto	l1207
  1358     021C                     u890:
  1359     021C                     l1191:
  1360     021C  01A5               	clrf	___awmod@counter
  1361     021D  0AA5               	incf	___awmod@counter,f
  1362     021E  2A2A               	goto	l1197
  1363     021F                     l1193:
  1364     021F  3001               	movlw	1
  1365     0220                     u905:
  1366     0220  1003               	clrc
  1367     0221  0DA0               	rlf	___awmod@divisor,f
  1368     0222  0DA1               	rlf	___awmod@divisor+1,f
  1369     0223  3EFF               	addlw	-1
  1370     0224  1D03               	skipz
  1371     0225  2A20               	goto	u905
  1372     0226                     l1195:
  1373     0226  3001               	movlw	1
  1374     0227  00A4               	movwf	??___awmod
  1375     0228  0824               	movf	??___awmod,w
  1376     0229  07A5               	addwf	___awmod@counter,f
  1377     022A                     l1197:
  1378     022A  1FA1               	btfss	___awmod@divisor+1,7
  1379     022B  2A2D               	goto	u911
  1380     022C  2A2E               	goto	u910
  1381     022D                     u911:
  1382     022D  2A1F               	goto	l1193
  1383     022E                     u910:
  1384     022E                     l1199:
  1385     022E  0821               	movf	___awmod@divisor+1,w
  1386     022F  0223               	subwf	___awmod@dividend+1,w
  1387     0230  1D03               	skipz
  1388     0231  2A34               	goto	u925
  1389     0232  0820               	movf	___awmod@divisor,w
  1390     0233  0222               	subwf	___awmod@dividend,w
  1391     0234                     u925:
  1392     0234  1C03               	skipc
  1393     0235  2A37               	goto	u921
  1394     0236  2A38               	goto	u920
  1395     0237                     u921:
  1396     0237  2A3E               	goto	l1203
  1397     0238                     u920:
  1398     0238                     l1201:
  1399     0238  0820               	movf	___awmod@divisor,w
  1400     0239  02A2               	subwf	___awmod@dividend,f
  1401     023A  0821               	movf	___awmod@divisor+1,w
  1402     023B  1C03               	skipc
  1403     023C  03A3               	decf	___awmod@dividend+1,f
  1404     023D  02A3               	subwf	___awmod@dividend+1,f
  1405     023E                     l1203:
  1406     023E  3001               	movlw	1
  1407     023F                     u935:
  1408     023F  1003               	clrc
  1409     0240  0CA1               	rrf	___awmod@divisor+1,f
  1410     0241  0CA0               	rrf	___awmod@divisor,f
  1411     0242  3EFF               	addlw	-1
  1412     0243  1D03               	skipz
  1413     0244  2A3F               	goto	u935
  1414     0245                     l1205:
  1415     0245  3001               	movlw	1
  1416     0246  02A5               	subwf	___awmod@counter,f
  1417     0247  1D03               	btfss	3,2
  1418     0248  2A4A               	goto	u941
  1419     0249  2A4B               	goto	u940
  1420     024A                     u941:
  1421     024A  2A2E               	goto	l1199
  1422     024B                     u940:
  1423     024B                     l1207:
  1424     024B  0826               	movf	___awmod@sign,w
  1425     024C  1903               	btfsc	3,2
  1426     024D  2A4F               	goto	u951
  1427     024E  2A50               	goto	u950
  1428     024F                     u951:
  1429     024F  2A55               	goto	l1211
  1430     0250                     u950:
  1431     0250                     l1209:
  1432     0250  09A2               	comf	___awmod@dividend,f
  1433     0251  09A3               	comf	___awmod@dividend+1,f
  1434     0252  0AA2               	incf	___awmod@dividend,f
  1435     0253  1903               	skipnz
  1436     0254  0AA3               	incf	___awmod@dividend+1,f
  1437     0255                     l1211:
  1438     0255  0823               	movf	___awmod@dividend+1,w
  1439     0256  00A1               	movwf	?___awmod+1
  1440     0257  0822               	movf	___awmod@dividend,w
  1441     0258  00A0               	movwf	?___awmod
  1442     0259                     l379:
  1443     0259  0008               	return
  1444     025A                     __end_of___awmod:
  1445                           
  1446                           	psect	text7
  1447     012E                     __ptext7:	
  1448 ;; *************** function ___awdiv *****************
  1449 ;; Defined at:
  1450 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  divisor         2    7[BANK0 ] int 
  1453 ;;  dividend        2    9[BANK0 ] int 
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;  quotient        2   14[BANK0 ] int 
  1456 ;;  sign            1   13[BANK0 ] unsigned char 
  1457 ;;  counter         1   12[BANK0 ] unsigned char 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  2    7[BANK0 ] int 
  1460 ;; Registers used:
  1461 ;;		wreg, status,2, status,0
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1467 ;;      Params:         0       4       0       0       0
  1468 ;;      Locals:         0       4       0       0       0
  1469 ;;      Temps:          0       1       0       0       0
  1470 ;;      Totals:         0       9       0       0       0
  1471 ;;Total ram usage:        9 bytes
  1472 ;; Hardware stack levels used: 1
  1473 ;; Hardware stack levels required when called: 1
  1474 ;; This function calls:
  1475 ;;		Nothing
  1476 ;; This function is called by:
  1477 ;;		_Separar_Valores
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481     012E                     ___awdiv:	
  1482                           ;psect for function ___awdiv
  1483                           
  1484     012E                     l949:	
  1485                           ;incstack = 0
  1486                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1487                           
  1488     012E  1283               	bcf	3,5	;RP0=0, select bank0
  1489     012F  1303               	bcf	3,6	;RP1=0, select bank0
  1490     0130  01AD               	clrf	___awdiv@sign
  1491     0131                     l951:
  1492     0131  1FA8               	btfss	___awdiv@divisor+1,7
  1493     0132  2934               	goto	u441
  1494     0133  2935               	goto	u440
  1495     0134                     u441:
  1496     0134  293C               	goto	l957
  1497     0135                     u440:
  1498     0135                     l953:
  1499     0135  09A7               	comf	___awdiv@divisor,f
  1500     0136  09A8               	comf	___awdiv@divisor+1,f
  1501     0137  0AA7               	incf	___awdiv@divisor,f
  1502     0138  1903               	skipnz
  1503     0139  0AA8               	incf	___awdiv@divisor+1,f
  1504     013A                     l955:
  1505     013A  01AD               	clrf	___awdiv@sign
  1506     013B  0AAD               	incf	___awdiv@sign,f
  1507     013C                     l957:
  1508     013C  1FAA               	btfss	___awdiv@dividend+1,7
  1509     013D  293F               	goto	u451
  1510     013E  2940               	goto	u450
  1511     013F                     u451:
  1512     013F  2949               	goto	l963
  1513     0140                     u450:
  1514     0140                     l959:
  1515     0140  09A9               	comf	___awdiv@dividend,f
  1516     0141  09AA               	comf	___awdiv@dividend+1,f
  1517     0142  0AA9               	incf	___awdiv@dividend,f
  1518     0143  1903               	skipnz
  1519     0144  0AAA               	incf	___awdiv@dividend+1,f
  1520     0145                     l961:
  1521     0145  3001               	movlw	1
  1522     0146  00AB               	movwf	??___awdiv
  1523     0147  082B               	movf	??___awdiv,w
  1524     0148  06AD               	xorwf	___awdiv@sign,f
  1525     0149                     l963:
  1526     0149  01AE               	clrf	___awdiv@quotient
  1527     014A  01AF               	clrf	___awdiv@quotient+1
  1528     014B                     l965:
  1529     014B  0827               	movf	___awdiv@divisor,w
  1530     014C  0428               	iorwf	___awdiv@divisor+1,w
  1531     014D  1903               	btfsc	3,2
  1532     014E  2950               	goto	u461
  1533     014F  2951               	goto	u460
  1534     0150                     u461:
  1535     0150  2988               	goto	l985
  1536     0151                     u460:
  1537     0151                     l967:
  1538     0151  01AC               	clrf	___awdiv@counter
  1539     0152  0AAC               	incf	___awdiv@counter,f
  1540     0153  295F               	goto	l973
  1541     0154                     l969:
  1542     0154  3001               	movlw	1
  1543     0155                     u475:
  1544     0155  1003               	clrc
  1545     0156  0DA7               	rlf	___awdiv@divisor,f
  1546     0157  0DA8               	rlf	___awdiv@divisor+1,f
  1547     0158  3EFF               	addlw	-1
  1548     0159  1D03               	skipz
  1549     015A  2955               	goto	u475
  1550     015B                     l971:
  1551     015B  3001               	movlw	1
  1552     015C  00AB               	movwf	??___awdiv
  1553     015D  082B               	movf	??___awdiv,w
  1554     015E  07AC               	addwf	___awdiv@counter,f
  1555     015F                     l973:
  1556     015F  1FA8               	btfss	___awdiv@divisor+1,7
  1557     0160  2962               	goto	u481
  1558     0161  2963               	goto	u480
  1559     0162                     u481:
  1560     0162  2954               	goto	l969
  1561     0163                     u480:
  1562     0163                     l975:
  1563     0163  3001               	movlw	1
  1564     0164                     u495:
  1565     0164  1003               	clrc
  1566     0165  0DAE               	rlf	___awdiv@quotient,f
  1567     0166  0DAF               	rlf	___awdiv@quotient+1,f
  1568     0167  3EFF               	addlw	-1
  1569     0168  1D03               	skipz
  1570     0169  2964               	goto	u495
  1571     016A  0828               	movf	___awdiv@divisor+1,w
  1572     016B  022A               	subwf	___awdiv@dividend+1,w
  1573     016C  1D03               	skipz
  1574     016D  2970               	goto	u505
  1575     016E  0827               	movf	___awdiv@divisor,w
  1576     016F  0229               	subwf	___awdiv@dividend,w
  1577     0170                     u505:
  1578     0170  1C03               	skipc
  1579     0171  2973               	goto	u501
  1580     0172  2974               	goto	u500
  1581     0173                     u501:
  1582     0173  297B               	goto	l981
  1583     0174                     u500:
  1584     0174                     l977:
  1585     0174  0827               	movf	___awdiv@divisor,w
  1586     0175  02A9               	subwf	___awdiv@dividend,f
  1587     0176  0828               	movf	___awdiv@divisor+1,w
  1588     0177  1C03               	skipc
  1589     0178  03AA               	decf	___awdiv@dividend+1,f
  1590     0179  02AA               	subwf	___awdiv@dividend+1,f
  1591     017A                     l979:
  1592     017A  142E               	bsf	___awdiv@quotient,0
  1593     017B                     l981:
  1594     017B  3001               	movlw	1
  1595     017C                     u515:
  1596     017C  1003               	clrc
  1597     017D  0CA8               	rrf	___awdiv@divisor+1,f
  1598     017E  0CA7               	rrf	___awdiv@divisor,f
  1599     017F  3EFF               	addlw	-1
  1600     0180  1D03               	skipz
  1601     0181  297C               	goto	u515
  1602     0182                     l983:
  1603     0182  3001               	movlw	1
  1604     0183  02AC               	subwf	___awdiv@counter,f
  1605     0184  1D03               	btfss	3,2
  1606     0185  2987               	goto	u521
  1607     0186  2988               	goto	u520
  1608     0187                     u521:
  1609     0187  2963               	goto	l975
  1610     0188                     u520:
  1611     0188                     l985:
  1612     0188  082D               	movf	___awdiv@sign,w
  1613     0189  1903               	btfsc	3,2
  1614     018A  298C               	goto	u531
  1615     018B  298D               	goto	u530
  1616     018C                     u531:
  1617     018C  2992               	goto	l989
  1618     018D                     u530:
  1619     018D                     l987:
  1620     018D  09AE               	comf	___awdiv@quotient,f
  1621     018E  09AF               	comf	___awdiv@quotient+1,f
  1622     018F  0AAE               	incf	___awdiv@quotient,f
  1623     0190  1903               	skipnz
  1624     0191  0AAF               	incf	___awdiv@quotient+1,f
  1625     0192                     l989:
  1626     0192  082F               	movf	___awdiv@quotient+1,w
  1627     0193  00A8               	movwf	?___awdiv+1
  1628     0194  082E               	movf	___awdiv@quotient,w
  1629     0195  00A7               	movwf	?___awdiv
  1630     0196                     l366:
  1631     0196  0008               	return
  1632     0197                     __end_of___awdiv:
  1633                           
  1634                           	psect	text8
  1635     03AA                     __ptext8:	
  1636 ;; *************** function _Int_Enable *****************
  1637 ;; Defined at:
  1638 ;;		line 145 in file "Lab6.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;		None
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;		None
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		None
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1652 ;;      Params:         0       0       0       0       0
  1653 ;;      Locals:         0       0       0       0       0
  1654 ;;      Temps:          0       0       0       0       0
  1655 ;;      Totals:         0       0       0       0       0
  1656 ;;Total ram usage:        0 bytes
  1657 ;; Hardware stack levels used: 1
  1658 ;; Hardware stack levels required when called: 1
  1659 ;; This function calls:
  1660 ;;		Nothing
  1661 ;; This function is called by:
  1662 ;;		_main
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666     03AA                     _Int_Enable:	
  1667                           ;psect for function _Int_Enable
  1668                           
  1669     03AA                     l1037:	
  1670                           ;incstack = 0
  1671                           ; Regs used in _Int_Enable: []
  1672                           
  1673                           
  1674                           ;Lab6.c: 147:     T0IF = 0;
  1675     03AA  110B               	bcf	11,2	;volatile
  1676                           
  1677                           ;Lab6.c: 148:     T0IE = 1;
  1678     03AB  168B               	bsf	11,5	;volatile
  1679                           
  1680                           ;Lab6.c: 149:     ADIF = 0;
  1681     03AC  1283               	bcf	3,5	;RP0=0, select bank0
  1682     03AD  1303               	bcf	3,6	;RP1=0, select bank0
  1683     03AE  130C               	bcf	12,6	;volatile
  1684                           
  1685                           ;Lab6.c: 150:     ADIE = 1;
  1686     03AF  1683               	bsf	3,5	;RP0=1, select bank1
  1687     03B0  1303               	bcf	3,6	;RP1=0, select bank1
  1688     03B1  170C               	bsf	12,6	;volatile
  1689                           
  1690                           ;Lab6.c: 151:     PEIE = 1;
  1691     03B2  170B               	bsf	11,6	;volatile
  1692                           
  1693                           ;Lab6.c: 152:     GIE = 1;
  1694     03B3  178B               	bsf	11,7	;volatile
  1695     03B4                     l98:
  1696     03B4  0008               	return
  1697     03B5                     __end_of_Int_Enable:
  1698                           
  1699                           	psect	text9
  1700     03BF                     __ptext9:	
  1701 ;; *************** function _ADC_Int *****************
  1702 ;; Defined at:
  1703 ;;		line 166 in file "Lab6.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;		None
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;		None
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      void 
  1710 ;; Registers used:
  1711 ;;		wreg
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1717 ;;      Params:         0       0       0       0       0
  1718 ;;      Locals:         0       0       0       0       0
  1719 ;;      Temps:          0       0       0       0       0
  1720 ;;      Totals:         0       0       0       0       0
  1721 ;;Total ram usage:        0 bytes
  1722 ;; Hardware stack levels used: 1
  1723 ;; Hardware stack levels required when called: 1
  1724 ;; This function calls:
  1725 ;;		Nothing
  1726 ;; This function is called by:
  1727 ;;		_main
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731     03BF                     _ADC_Int:	
  1732                           ;psect for function _ADC_Int
  1733                           
  1734     03BF                     l1045:	
  1735                           ;incstack = 0
  1736                           ; Regs used in _ADC_Int: [wreg]
  1737                           
  1738                           
  1739                           ;Lab6.c: 168:     ADCON0 = 0b10000001;
  1740     03BF  3081               	movlw	129
  1741     03C0  1283               	bcf	3,5	;RP0=0, select bank0
  1742     03C1  1303               	bcf	3,6	;RP1=0, select bank0
  1743     03C2  009F               	movwf	31	;volatile
  1744     03C3                     l1047:
  1745                           
  1746                           ;Lab6.c: 169:     ADCON1bits.ADFM = 0;
  1747     03C3  1683               	bsf	3,5	;RP0=1, select bank1
  1748     03C4  1303               	bcf	3,6	;RP1=0, select bank1
  1749     03C5  139F               	bcf	31,7	;volatile
  1750     03C6                     l1049:
  1751                           
  1752                           ;Lab6.c: 170:     ADCON1bits.VCFG1 = 0;
  1753     03C6  129F               	bcf	31,5	;volatile
  1754     03C7                     l1051:
  1755                           
  1756                           ;Lab6.c: 171:     ADCON1bits.VCFG0 = 0;
  1757     03C7  121F               	bcf	31,4	;volatile
  1758     03C8                     l104:
  1759     03C8  0008               	return
  1760     03C9                     __end_of_ADC_Int:
  1761                           
  1762                           	psect	text10
  1763     0345                     __ptext10:	
  1764 ;; *************** function _ADC_Change *****************
  1765 ;; Defined at:
  1766 ;;		line 185 in file "Lab6.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;		None
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;		None
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, status,2, status,0, pclath, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1780 ;;      Params:         0       0       0       0       0
  1781 ;;      Locals:         0       0       0       0       0
  1782 ;;      Temps:          0       0       0       0       0
  1783 ;;      Totals:         0       0       0       0       0
  1784 ;;Total ram usage:        0 bytes
  1785 ;; Hardware stack levels used: 1
  1786 ;; Hardware stack levels required when called: 2
  1787 ;; This function calls:
  1788 ;;		_ADC_Select
  1789 ;; This function is called by:
  1790 ;;		_main
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794     0345                     _ADC_Change:	
  1795                           ;psect for function _ADC_Change
  1796                           
  1797     0345                     l1215:	
  1798                           ;incstack = 0
  1799                           ; Regs used in _ADC_Change: [wreg+status,2+status,0+pclath+cstack]
  1800                           
  1801                           
  1802                           ;Lab6.c: 187:     if (ADCON0bits.GO)
  1803     0345  1283               	bcf	3,5	;RP0=0, select bank0
  1804     0346  1303               	bcf	3,6	;RP1=0, select bank0
  1805     0347  1C9F               	btfss	31,1	;volatile
  1806     0348  2B4A               	goto	u961
  1807     0349  2B4B               	goto	u960
  1808     034A                     u961:
  1809     034A  2B4C               	goto	l1219
  1810     034B                     u960:
  1811     034B  2B6A               	goto	l111
  1812     034C                     l1219:
  1813                           
  1814                           ;Lab6.c: 191:     if (Bandera_ADC)
  1815     034C  0877               	movf	_Bandera_ADC,w
  1816     034D  1903               	btfsc	3,2
  1817     034E  2B50               	goto	u971
  1818     034F  2B51               	goto	u970
  1819     0350                     u971:
  1820     0350  2B5A               	goto	l1223
  1821     0351                     u970:
  1822     0351                     l1221:
  1823                           
  1824                           ;Lab6.c: 192:     {;Lab6.c: 193:         ADC_Select(0);
  1825     0351  3000               	movlw	0
  1826     0352  00A0               	movwf	ADC_Select@channel
  1827     0353  00A1               	movwf	ADC_Select@channel+1
  1828     0354  120A  118A  22B4  120A  118A  	fcall	_ADC_Select
  1829                           
  1830                           ;Lab6.c: 194:     }
  1831     0359  2B63               	goto	l114
  1832     035A                     l1223:
  1833                           
  1834                           ;Lab6.c: 196:     {;Lab6.c: 197:         ADC_Select(1);
  1835     035A  3001               	movlw	1
  1836     035B  00A0               	movwf	ADC_Select@channel
  1837     035C  3000               	movlw	0
  1838     035D  00A1               	movwf	ADC_Select@channel+1
  1839     035E  120A  118A  22B4  120A  118A  	fcall	_ADC_Select
  1840     0363                     l114:
  1841     0363  1283               	bcf	3,5	;RP0=0, select bank0
  1842     0364  1303               	bcf	3,6	;RP1=0, select bank0
  1843     0365  189F               	btfsc	31,1	;volatile
  1844     0366  2B68               	goto	u981
  1845     0367  2B69               	goto	u980
  1846     0368                     u981:
  1847     0368  2B63               	goto	l114
  1848     0369                     u980:
  1849     0369                     l116:
  1850                           
  1851                           ;Lab6.c: 200:     ADCON0bits.GO = 1;
  1852     0369  149F               	bsf	31,1	;volatile
  1853     036A                     l111:
  1854     036A  0008               	return
  1855     036B                     __end_of_ADC_Change:
  1856                           
  1857                           	psect	text11
  1858     02B4                     __ptext11:	
  1859 ;; *************** function _ADC_Select *****************
  1860 ;; Defined at:
  1861 ;;		line 174 in file "Lab6.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;  channel         2    0[BANK0 ] int 
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;		None
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      void 
  1868 ;; Registers used:
  1869 ;;		wreg, status,2, status,0
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1875 ;;      Params:         0       2       0       0       0
  1876 ;;      Locals:         0       0       0       0       0
  1877 ;;      Temps:          0       3       0       0       0
  1878 ;;      Totals:         0       5       0       0       0
  1879 ;;Total ram usage:        5 bytes
  1880 ;; Hardware stack levels used: 1
  1881 ;; Hardware stack levels required when called: 1
  1882 ;; This function calls:
  1883 ;;		Nothing
  1884 ;; This function is called by:
  1885 ;;		_ADC_Change
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889     02B4                     _ADC_Select:	
  1890                           ;psect for function _ADC_Select
  1891                           
  1892     02B4                     l1175:	
  1893                           ;incstack = 0
  1894                           ; Regs used in _ADC_Select: [wreg+status,2+status,0]
  1895                           
  1896                           
  1897                           ;Lab6.c: 174: void ADC_Select(int channel);Lab6.c: 175: {;Lab6.c: 176:     ADCON0bits.CH
      +                          S0 = (channel >> 0) & 0x01;
  1898     02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1899     02B5  1303               	bcf	3,6	;RP1=0, select bank0
  1900     02B6  0820               	movf	ADC_Select@channel,w
  1901     02B7  3901               	andlw	1
  1902     02B8  00A2               	movwf	??_ADC_Select
  1903     02B9  0DA2               	rlf	??_ADC_Select,f
  1904     02BA  0DA2               	rlf	??_ADC_Select,f
  1905     02BB  081F               	movf	31,w	;volatile
  1906     02BC  0622               	xorwf	??_ADC_Select,w
  1907     02BD  39FB               	andlw	-5
  1908     02BE  0622               	xorwf	??_ADC_Select,w
  1909     02BF  009F               	movwf	31	;volatile
  1910                           
  1911                           ;Lab6.c: 177:     ADCON0bits.CHS1 = (channel >> 1) & 0x01;
  1912     02C0  0821               	movf	ADC_Select@channel+1,w
  1913     02C1  00A3               	movwf	??_ADC_Select+1
  1914     02C2  0820               	movf	ADC_Select@channel,w
  1915     02C3  00A2               	movwf	??_ADC_Select
  1916     02C4  0D23               	rlf	??_ADC_Select+1,w
  1917     02C5  0CA3               	rrf	??_ADC_Select+1,f
  1918     02C6  0CA2               	rrf	??_ADC_Select,f
  1919     02C7  0822               	movf	??_ADC_Select,w
  1920     02C8  3901               	andlw	1
  1921     02C9  00A4               	movwf	??_ADC_Select+2
  1922     02CA  0DA4               	rlf	??_ADC_Select+2,f
  1923     02CB  0DA4               	rlf	??_ADC_Select+2,f
  1924     02CC  0DA4               	rlf	??_ADC_Select+2,f
  1925     02CD  081F               	movf	31,w	;volatile
  1926     02CE  0624               	xorwf	??_ADC_Select+2,w
  1927     02CF  39F7               	andlw	-9
  1928     02D0  0624               	xorwf	??_ADC_Select+2,w
  1929     02D1  009F               	movwf	31	;volatile
  1930                           
  1931                           ;Lab6.c: 178:     ADCON0bits.CHS2 = (channel >> 2) & 0x01;
  1932     02D2  0821               	movf	ADC_Select@channel+1,w
  1933     02D3  00A3               	movwf	??_ADC_Select+1
  1934     02D4  0820               	movf	ADC_Select@channel,w
  1935     02D5  00A2               	movwf	??_ADC_Select
  1936     02D6  0D23               	rlf	??_ADC_Select+1,w
  1937     02D7  0CA3               	rrf	??_ADC_Select+1,f
  1938     02D8  0CA2               	rrf	??_ADC_Select,f
  1939     02D9  0D23               	rlf	??_ADC_Select+1,w
  1940     02DA  0CA3               	rrf	??_ADC_Select+1,f
  1941     02DB  0CA2               	rrf	??_ADC_Select,f
  1942     02DC  0822               	movf	??_ADC_Select,w
  1943     02DD  3901               	andlw	1
  1944     02DE  00A4               	movwf	??_ADC_Select+2
  1945     02DF  0EA4               	swapf	??_ADC_Select+2,f
  1946     02E0  081F               	movf	31,w	;volatile
  1947     02E1  0624               	xorwf	??_ADC_Select+2,w
  1948     02E2  39EF               	andlw	-17
  1949     02E3  0624               	xorwf	??_ADC_Select+2,w
  1950     02E4  009F               	movwf	31	;volatile
  1951                           
  1952                           ;Lab6.c: 179:     ADCON0bits.CHS3 = (channel >> 3) & 0x01;
  1953     02E5  0821               	movf	ADC_Select@channel+1,w
  1954     02E6  00A3               	movwf	??_ADC_Select+1
  1955     02E7  0820               	movf	ADC_Select@channel,w
  1956     02E8  00A2               	movwf	??_ADC_Select
  1957     02E9  0D23               	rlf	??_ADC_Select+1,w
  1958     02EA  0CA3               	rrf	??_ADC_Select+1,f
  1959     02EB  0CA2               	rrf	??_ADC_Select,f
  1960     02EC  0D23               	rlf	??_ADC_Select+1,w
  1961     02ED  0CA3               	rrf	??_ADC_Select+1,f
  1962     02EE  0CA2               	rrf	??_ADC_Select,f
  1963     02EF  0D23               	rlf	??_ADC_Select+1,w
  1964     02F0  0CA3               	rrf	??_ADC_Select+1,f
  1965     02F1  0CA2               	rrf	??_ADC_Select,f
  1966     02F2  0822               	movf	??_ADC_Select,w
  1967     02F3  3901               	andlw	1
  1968     02F4  00A4               	movwf	??_ADC_Select+2
  1969     02F5  0EA4               	swapf	??_ADC_Select+2,f
  1970     02F6  0DA4               	rlf	??_ADC_Select+2,f
  1971     02F7  081F               	movf	31,w	;volatile
  1972     02F8  0624               	xorwf	??_ADC_Select+2,w
  1973     02F9  39DF               	andlw	-33
  1974     02FA  0624               	xorwf	??_ADC_Select+2,w
  1975     02FB  009F               	movwf	31	;volatile
  1976     02FC                     l107:
  1977     02FC  0008               	return
  1978     02FD                     __end_of_ADC_Select:
  1979                           
  1980                           	psect	text12
  1981     00B7                     __ptext12:	
  1982 ;; *************** function _isr *****************
  1983 ;; Defined at:
  1984 ;;		line 76 in file "Lab6.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;		None
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;		None
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      void 
  1991 ;; Registers used:
  1992 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1998 ;;      Params:         0       0       0       0       0
  1999 ;;      Locals:         0       0       0       0       0
  2000 ;;      Temps:          5       0       0       0       0
  2001 ;;      Totals:         5       0       0       0       0
  2002 ;;Total ram usage:        5 bytes
  2003 ;; Hardware stack levels used: 1
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		Interrupt level 1
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011     00B7                     _isr:	
  2012                           ;psect for function _isr
  2013                           
  2014     00B7                     i1l1105:
  2015                           
  2016                           ;Lab6.c: 78:     if (T0IF)
  2017     00B7  1D0B               	btfss	11,2	;volatile
  2018     00B8  28BA               	goto	u78_21
  2019     00B9  28BB               	goto	u78_20
  2020     00BA                     u78_21:
  2021     00BA  2902               	goto	i1l1151
  2022     00BB                     u78_20:
  2023     00BB                     i1l1107:
  2024                           
  2025                           ;Lab6.c: 79:     {;Lab6.c: 80:     PORTC = 0x00;
  2026     00BB  1283               	bcf	3,5	;RP0=0, select bank0
  2027     00BC  1303               	bcf	3,6	;RP1=0, select bank0
  2028     00BD  0187               	clrf	7	;volatile
  2029     00BE                     i1l1109:
  2030                           
  2031                           ;Lab6.c: 81:     if(Bandera_Display == 0)
  2032     00BE  0876               	movf	_Bandera_Display,w
  2033     00BF  1D03               	btfss	3,2
  2034     00C0  28C2               	goto	u79_21
  2035     00C1  28C3               	goto	u79_20
  2036     00C2                     u79_21:
  2037     00C2  28CB               	goto	i1l1117
  2038     00C3                     u79_20:
  2039     00C3                     i1l1111:
  2040                           
  2041                           ;Lab6.c: 82:     {;Lab6.c: 83:         PORTD = Tabla_Display[0];
  2042     00C3  083B               	movf	_Tabla_Display,w
  2043     00C4  0088               	movwf	8	;volatile
  2044                           
  2045                           ;Lab6.c: 84:         PORTC = 0x01;
  2046     00C5  3001               	movlw	1
  2047     00C6  0087               	movwf	7	;volatile
  2048     00C7                     i1l1113:
  2049                           
  2050                           ;Lab6.c: 85:         RD7 = 1;
  2051     00C7  1788               	bsf	8,7	;volatile
  2052     00C8                     i1l1115:
  2053                           
  2054                           ;Lab6.c: 86:         Bandera_Display = 1;
  2055     00C8  01F6               	clrf	_Bandera_Display
  2056     00C9  0AF6               	incf	_Bandera_Display,f
  2057                           
  2058                           ;Lab6.c: 87:     }
  2059     00CA  28FF               	goto	i1l1147
  2060     00CB                     i1l1117:
  2061     00CB  0376               	decf	_Bandera_Display,w
  2062     00CC  1D03               	btfss	3,2
  2063     00CD  28CF               	goto	u80_21
  2064     00CE  28D0               	goto	u80_20
  2065     00CF                     u80_21:
  2066     00CF  28DC               	goto	i1l1127
  2067     00D0                     u80_20:
  2068     00D0                     i1l1119:
  2069                           
  2070                           ;Lab6.c: 89:     {;Lab6.c: 90:         PORTD = Tabla_Display[Centenas];
  2071     00D0  084D               	movf	_Centenas,w
  2072     00D1  3E3B               	addlw	(low (_Tabla_Display| 0))& (0+255)
  2073     00D2  0084               	movwf	4
  2074     00D3  1383               	bcf	3,7	;select IRP bank0
  2075     00D4  0800               	movf	0,w
  2076     00D5  0088               	movwf	8	;volatile
  2077     00D6                     i1l1121:
  2078                           
  2079                           ;Lab6.c: 91:         PORTC = 0x02;
  2080     00D6  3002               	movlw	2
  2081     00D7  0087               	movwf	7	;volatile
  2082     00D8                     i1l1123:
  2083                           
  2084                           ;Lab6.c: 92:         RD7 = 0;
  2085     00D8  1388               	bcf	8,7	;volatile
  2086     00D9                     i1l1125:
  2087                           
  2088                           ;Lab6.c: 93:         Bandera_Display = 2;
  2089     00D9  3002               	movlw	2
  2090     00DA  00F6               	movwf	_Bandera_Display
  2091                           
  2092                           ;Lab6.c: 94:     }
  2093     00DB  28FF               	goto	i1l1147
  2094     00DC                     i1l1127:
  2095     00DC  3002               	movlw	2
  2096     00DD  0676               	xorwf	_Bandera_Display,w
  2097     00DE  1D03               	btfss	3,2
  2098     00DF  28E1               	goto	u81_21
  2099     00E0  28E2               	goto	u81_20
  2100     00E1                     u81_21:
  2101     00E1  28EE               	goto	i1l1137
  2102     00E2                     u81_20:
  2103     00E2                     i1l1129:
  2104                           
  2105                           ;Lab6.c: 96:     {;Lab6.c: 97:         PORTD = Tabla_Display[Decenas];
  2106     00E2  084C               	movf	_Decenas,w
  2107     00E3  3E3B               	addlw	(low (_Tabla_Display| 0))& (0+255)
  2108     00E4  0084               	movwf	4
  2109     00E5  1383               	bcf	3,7	;select IRP bank0
  2110     00E6  0800               	movf	0,w
  2111     00E7  0088               	movwf	8	;volatile
  2112     00E8                     i1l1131:
  2113                           
  2114                           ;Lab6.c: 98:         PORTC = 0x04;
  2115     00E8  3004               	movlw	4
  2116     00E9  0087               	movwf	7	;volatile
  2117     00EA                     i1l1133:
  2118                           
  2119                           ;Lab6.c: 99:         RD7 = 1;
  2120     00EA  1788               	bsf	8,7	;volatile
  2121     00EB                     i1l1135:
  2122                           
  2123                           ;Lab6.c: 100:         Bandera_Display = 3;
  2124     00EB  3003               	movlw	3
  2125     00EC  00F6               	movwf	_Bandera_Display
  2126                           
  2127                           ;Lab6.c: 101:     }
  2128     00ED  28FF               	goto	i1l1147
  2129     00EE                     i1l1137:
  2130     00EE  3003               	movlw	3
  2131     00EF  0676               	xorwf	_Bandera_Display,w
  2132     00F0  1D03               	btfss	3,2
  2133     00F1  28F3               	goto	u82_21
  2134     00F2  28F4               	goto	u82_20
  2135     00F3                     u82_21:
  2136     00F3  28FF               	goto	i1l85
  2137     00F4                     u82_20:
  2138     00F4                     i1l1139:
  2139                           
  2140                           ;Lab6.c: 103:     {;Lab6.c: 104:         PORTD = Tabla_Display[Unidades];
  2141     00F4  084B               	movf	_Unidades,w
  2142     00F5  3E3B               	addlw	(low (_Tabla_Display| 0))& (0+255)
  2143     00F6  0084               	movwf	4
  2144     00F7  1383               	bcf	3,7	;select IRP bank0
  2145     00F8  0800               	movf	0,w
  2146     00F9  0088               	movwf	8	;volatile
  2147     00FA                     i1l1141:
  2148                           
  2149                           ;Lab6.c: 105:         PORTC = 0x08;
  2150     00FA  3008               	movlw	8
  2151     00FB  0087               	movwf	7	;volatile
  2152     00FC                     i1l1143:
  2153                           
  2154                           ;Lab6.c: 106:         RD7 = 1;
  2155     00FC  1788               	bsf	8,7	;volatile
  2156     00FD                     i1l1145:
  2157                           
  2158                           ;Lab6.c: 107:         Bandera_Display = 0;
  2159     00FD  01F6               	clrf	_Bandera_Display
  2160     00FE  28FF               	goto	i1l1147
  2161     00FF                     i1l85:
  2162     00FF                     i1l1147:
  2163                           
  2164                           ;Lab6.c: 109:        T0IF = 0;
  2165     00FF  110B               	bcf	11,2	;volatile
  2166     0100                     i1l1149:
  2167                           
  2168                           ;Lab6.c: 110:        TMR0 = TMR0_Pre;
  2169     0100  0878               	movf	_TMR0_Pre,w
  2170     0101  0081               	movwf	1	;volatile
  2171     0102                     i1l1151:
  2172                           
  2173                           ;Lab6.c: 113:     if (ADIF)
  2174     0102  1283               	bcf	3,5	;RP0=0, select bank0
  2175     0103  1303               	bcf	3,6	;RP1=0, select bank0
  2176     0104  1F0C               	btfss	12,6	;volatile
  2177     0105  2907               	goto	u83_21
  2178     0106  2908               	goto	u83_20
  2179     0107                     u83_21:
  2180     0107  2925               	goto	i1l92
  2181     0108                     u83_20:
  2182     0108                     i1l1153:
  2183                           
  2184                           ;Lab6.c: 114:     {;Lab6.c: 115:         if (Bandera_ADC)
  2185     0108  0877               	movf	_Bandera_ADC,w
  2186     0109  1903               	btfsc	3,2
  2187     010A  290C               	goto	u84_21
  2188     010B  290D               	goto	u84_20
  2189     010C                     u84_21:
  2190     010C  2915               	goto	i1l1157
  2191     010D                     u84_20:
  2192     010D                     i1l1155:
  2193                           
  2194                           ;Lab6.c: 116:         {;Lab6.c: 117:             ADC1 = ADRESH;
  2195     010D  081E               	movf	30,w	;volatile
  2196     010E  00F0               	movwf	??_isr
  2197     010F  01F1               	clrf	??_isr+1
  2198     0110  0870               	movf	??_isr,w
  2199     0111  00C9               	movwf	_ADC1
  2200     0112  0871               	movf	??_isr+1,w
  2201     0113  00CA               	movwf	_ADC1+1
  2202                           
  2203                           ;Lab6.c: 118:         }
  2204     0114  291C               	goto	i1l1159
  2205     0115                     i1l1157:
  2206                           
  2207                           ;Lab6.c: 120:         {;Lab6.c: 121:             ADC2 = ADRESH;
  2208     0115  081E               	movf	30,w	;volatile
  2209     0116  00F0               	movwf	??_isr
  2210     0117  01F1               	clrf	??_isr+1
  2211     0118  0870               	movf	??_isr,w
  2212     0119  00C7               	movwf	_ADC2
  2213     011A  0871               	movf	??_isr+1,w
  2214     011B  00C8               	movwf	_ADC2+1
  2215     011C                     i1l1159:
  2216                           
  2217                           ;Lab6.c: 123:         ADIF = 0;
  2218     011C  130C               	bcf	12,6	;volatile
  2219     011D                     i1l1161:
  2220                           
  2221                           ;Lab6.c: 124:         Bandera_ADC = !Bandera_ADC;
  2222     011D  0877               	movf	_Bandera_ADC,w
  2223     011E  1903               	btfsc	3,2
  2224     011F  2921               	goto	u85_21
  2225     0120  2923               	goto	u85_20
  2226     0121                     u85_21:
  2227     0121  3001               	movlw	1
  2228     0122  2924               	goto	u86_20
  2229     0123                     u85_20:
  2230     0123  3000               	movlw	0
  2231     0124                     u86_20:
  2232     0124  00F7               	movwf	_Bandera_ADC
  2233     0125                     i1l92:
  2234     0125  0874               	movf	??_isr+4,w
  2235     0126  008A               	movwf	10
  2236     0127  0873               	movf	??_isr+3,w
  2237     0128  0084               	movwf	4
  2238     0129  0E72               	swapf	??_isr+2,w
  2239     012A  0083               	movwf	3
  2240     012B  0EFE               	swapf	btemp,f
  2241     012C  0E7E               	swapf	btemp,w
  2242     012D  0009               	retfie
  2243     012E                     __end_of_isr:
  2244     007E                     btemp	set	126	;btemp
  2245     007E                     wtemp0	set	126
  2246                           
  2247                           	psect	intentry
  2248     0004                     __pintentry:	
  2249                           ;incstack = 0
  2250                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  2251                           
  2252     0004                     interrupt_function:
  2253     007E                     saved_w	set	btemp
  2254     0004  00FE               	movwf	btemp
  2255     0005  0E03               	swapf	3,w
  2256     0006  00F2               	movwf	??_isr+2
  2257     0007  0804               	movf	4,w
  2258     0008  00F3               	movwf	??_isr+3
  2259     0009  080A               	movf	10,w
  2260     000A  00F4               	movwf	??_isr+4
  2261     000B  120A  118A  28B7   	ljmp	_isr
  2262                           
  2263                           	psect	idloc
  2264                           
  2265                           ;Config register IDLOC0 @ 0x2000
  2266                           ;	unspecified, using default values
  2267     2000                     	org	8192
  2268     2000  3FFF               	dw	16383
  2269                           
  2270                           ;Config register IDLOC1 @ 0x2001
  2271                           ;	unspecified, using default values
  2272     2001                     	org	8193
  2273     2001  3FFF               	dw	16383
  2274                           
  2275                           ;Config register IDLOC2 @ 0x2002
  2276                           ;	unspecified, using default values
  2277     2002                     	org	8194
  2278     2002  3FFF               	dw	16383
  2279                           
  2280                           ;Config register IDLOC3 @ 0x2003
  2281                           ;	unspecified, using default values
  2282     2003                     	org	8195
  2283     2003  3FFF               	dw	16383
  2284                           
  2285                           	psect	config
  2286                           
  2287                           ;Config register CONFIG1 @ 0x2007
  2288                           ;	Oscillator Selection bits
  2289                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2290                           ;	Watchdog Timer Enable bit
  2291                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2292                           ;	Power-up Timer Enable bit
  2293                           ;	PWRTE = OFF, PWRT disabled
  2294                           ;	RE3/MCLR pin function select bit
  2295                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2296                           ;	Code Protection bit
  2297                           ;	CP = OFF, Program memory code protection is disabled
  2298                           ;	Data Code Protection bit
  2299                           ;	CPD = OFF, Data memory code protection is disabled
  2300                           ;	Brown Out Reset Selection bits
  2301                           ;	BOREN = OFF, BOR disabled
  2302                           ;	Internal External Switchover bit
  2303                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2304                           ;	Fail-Safe Clock Monitor Enabled bit
  2305                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2306                           ;	Low Voltage Programming Enable bit
  2307                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2308                           ;	In-Circuit Debugger Mode bit
  2309                           ;	DEBUG = 0x1, unprogramme  2310     2007                     	org	8199
  2311     2007  20D4               	dw	8404
  2312                           
  2313                           ;Config register CONFIG2 @ 0x2008
  2314                           ;	Brown-out Reset Selection bit
  2315                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2316                           ;	Flash Program Memory Self Write Enable bits
  2317                           ;	WRT = OFF, Write protection off
  2318     2008                     	org	8200
  2319     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     27      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___lldiv
    ___lldiv->___lmul
    _Separar_Valores->___awdiv
    ___awdiv->___awmod
    _ADC_Change->_ADC_Select

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3223
                         _ADC_Change
                            _ADC_Int
                         _Int_Enable
                    _Separar_Valores
                              _Setup
                        _TMR0_Config
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8     316
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     421
                                             13 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR0_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Separar_Valores                                      4     2      2    2182
                                             16 BANK0      4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1333
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              7 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Int_Enable                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Change                                           0     0      0     304
                         _ADC_Select
 ---------------------------------------------------------------------------------
 (2) _ADC_Select                                           5     3      2     304
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Change
     _ADC_Select
   _ADC_Int
   _Int_Enable
   _Separar_Valores
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _Setup
   _TMR0_Config
   ___lldiv
     ___lmul (ARG)
   ___lmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1B      2E       5       57.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      37      12        0.0%
ABS                  0      0      37       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 27 22:50:36 2023

                      pc 0002                       l95 0389                       l98 03B4  
           ___awdiv@sign 002D                       fsr 0004                      l101 03A9  
                    l111 036A                      l104 03C8                      l114 0363  
                    l107 02FC                      l116 0369                      l119 00B6  
                    l227 0344                      l249 01FE                      l366 0196  
                    l379 0259                      l951 0131                      l961 0145  
                    l953 0135                      l971 015B                      l963 0149  
                    l955 013A                      l981 017B                      l973 015F  
                    l965 014B                      l957 013C                      l949 012E  
                    l983 0182                      l975 0163                      l967 0151  
                    l959 0140                      l977 0174                      l969 0154  
                    l985 0188                      l987 018D                      l979 017A  
                    _GIE 005F                      l989 0192                      _RD7 0047  
                    u500 0174                      u501 0173                      _PS0 0408  
                    _PS1 0409                      u520 0188                      u440 0135  
                    _PS2 040A                      u521 0187                      u505 0170  
                    u441 0134                      u530 018D                      u450 0140  
                    u531 018C                      u515 017C                      u451 013F  
                    u460 0151                      u461 0150                      u480 0163  
                    u481 0162                      u475 0155                      u910 022E  
                    u495 0164                      u911 022D                      _PSA 040B  
                    u920 0238                      u921 0237                      u905 0220  
                    u940 024B                      u941 024A                      u925 0234  
                    u950 0250                      u870 0206                      u951 024F  
                    u935 023F                      u871 0205                      u960 034B  
                    u880 0211                      u961 034A                      u881 0210  
                    u970 0351                      u890 021C                      u971 0350  
                    u891 021B                      u980 0369                      u981 0368  
                    u990 030B                      u991 030A                      _isr 00B7  
                    fsr0 0004                      indf 0000          __end_of_ADC_Int 03C9  
           ___awmod@sign 0026                     l1031 036B                     l1201 0238  
                   l1033 036F                     l1041 03A4                     l1051 03C7  
                   l1211 0255                     l1203 023E                     l1035 0370  
                   l1043 03A8                     l1221 0351                     l1045 03BF  
                   l1037 03AA                     l1205 0245                     l1223 035A  
                   l1215 0345                     l1047 03C3                     l1207 024B  
                   l1039 039D                     l1231 0307                     l1049 03C6  
                   l1209 0250                     l1225 0035                     l1233 030B  
                   l1219 034C                     l1251 01BD                     l1243 0197  
                   l1235 0322                     l1181 0206                     l1261 01F0  
                   l1253 01C6                     l1245 01A9                     l1237 032B  
                   l1229 02FD                     l1175 02B4                     l1191 021C  
                   l1183 020B                     l1255 01D8                     l1247 01AC  
                   l1263 01F6                     l1239 033C                     l1271 0264  
                   l1193 021F                     l1185 020D                     l1177 01FF  
                   l1257 01E6                     l1249 01B9                     l1273 0269  
                   l1195 0226                     l1187 0211                     l1179 0202  
                   l1259 01E7                     l1275 026E                     l1267 025A  
                   l1197 022A                     l1189 0216                     l1277 0273  
                   l1269 025F                     l1199 022E                     _ADC1 0049  
                   _ADC2 0047                     _ADIE 0466                     _ADIF 0066  
                   ?_isr 0070                     _T0IE 005D                     _T0IF 005A  
                   u1001 0314                     _T0CS 040D                     u1002 031B  
                   u1003 0322                     u1100 01F6                     u1101 01F5  
                   u1030 033C                     u1031 033B                     u1015 0324  
                   u1040 01A9                     u1041 01A8                     u1025 032C  
                   u1060 01BD                     u1061 01BC                     u1055 01AE  
                   u1080 01D8                     u1081 01D7                     u1075 01BF  
                   u1085 01D4                     u1095 01E8                     _PEIE 005E  
                   i1l92 0125                     i1l85 00FF              _Bandera_ADC 0077  
                   _TMR0 0001                     _main 025A                     btemp 007E  
                   start 000E                    ??_isr 0070                    ?_main 0070  
        __end_of___awdiv 0197          __end_of___awmod 025A                    _ANSEL 0188  
        __end_of___lldiv 01FF          ___awdiv@divisor 0027          ___awdiv@counter 002C  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    u80_20 00D0                    u80_21 00CF  
                  u81_20 00E2                    u81_21 00E1                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  u82_20 00F4                    u82_21 00F3                    u83_20 0108  
                  u83_21 0107                    u84_20 010D                    u84_21 010C  
                  u85_20 0123                    u85_21 0121                    u86_20 0124  
                  u78_20 00BB                    u78_21 00BA                    u79_20 00C3  
                  u79_21 00C2      ___lmul@multiplicand 0024                    _Miles 0075  
                  _Setup 036B                    pclath 000A          _Separar_Valores 0035  
                  status 0003                    wtemp0 007E               _Int_Enable 03AA  
        __initialization 0011             __end_of_main 02B4                ??_ADC_Int 0075  
   Separar_Valores@Valor 0030                   ??_main 0075                   ?_Setup 0070  
                 _ADCON0 001F                   _ADRESH 001E         ___awdiv@dividend 0029  
                 _ANSELH 0189             ??_ADC_Change 0075                   i1l1111 00C3  
                 i1l1121 00D6                   i1l1113 00C7                   i1l1105 00B7  
                 i1l1131 00E8                   i1l1123 00D8                   i1l1115 00C8  
                 i1l1107 00BB                   i1l1141 00FA                   i1l1133 00EA  
                 i1l1125 00D9                   i1l1117 00CB                   i1l1109 00BE  
                 i1l1143 00FC                   i1l1135 00EB                   i1l1119 00D0  
                 i1l1127 00DC                   i1l1151 0102                   i1l1161 011D  
                 i1l1153 0108                   i1l1145 00FD                   i1l1129 00E2  
                 i1l1137 00EE                   i1l1155 010D                   i1l1139 00F4  
                 i1l1147 00FF                   i1l1157 0115                   i1l1149 0100  
                 i1l1159 011C             ??_ADC_Select 0022             ?_TMR0_Config 0070  
                 ___lmul 02FD                ??___awdiv 002B                ??___awmod 0024  
          _Tabla_Display 003B                ??___lldiv 0035         ___awdiv@quotient 002E  
        ___awmod@divisor 0020          ___awmod@counter 0025       __end_of_ADC_Change 036B  
           __pdataCOMMON 0078       __end_of_ADC_Select 02FD                   saved_w 007E  
__end_of_Separar_Valores 00B7  __end_of__initialization 0031              ?_Int_Enable 0070  
         __pcstackCOMMON 0070            __end_of_Setup 038A             __pidataBANK0 03B5  
                ??_Setup 0075               __pbssBANK0 0045               __pmaintext 025A  
                ?___lmul 0020               __pintentry 0004           ___lmul@product 0029  
                _ADC_Int 03BF         ?_Separar_Valores 0030                  _Decenas 004C  
                _ValorDC 0045                  ___awdiv 012E                  ___awmod 01FF  
                ___lldiv 0197                  __ptext1 02FD                  __ptext2 0197  
                __ptext3 039D                  __ptext4 036B                  __ptext5 0035  
                __ptext6 01FF                  __ptext7 012E                  __ptext8 03AA  
                __ptext9 03BF         ___awmod@dividend 0022     end_of_initialization 0031  
        ___lldiv@divisor 002D          ___lldiv@counter 003A             ??_Int_Enable 0075  
         __end_of___lmul 0345            __pidataCOMMON 03C9      start_initialization 0011  
            __end_of_isr 012E       __end_of_Int_Enable 03B5                 ??___lmul 0028  
             init_fetch0 038A              __pdataBANK0 003B                 ?_ADC_Int 0070  
            __pbssCOMMON 0075                ___latbits 0002            __pcstackBANK0 0020  
      ADC_Select@channel 0020                 ?___awdiv 0027                 ?___awmod 0020  
               ?___lldiv 002D        interrupt_function 0004            ??_TMR0_Config 0075  
               _TMR0_Pre 0078               _ADCON0bits 001F               _ADCON1bits 009F  
               _Centenas 004D        ___lmul@multiplier 0020          _Bandera_Display 0076  
             _ADC_Change 0345               _ADC_Select 02B4                 _Unidades 004B  
    __end_of_TMR0_Config 03AA                 __ptext10 0345                 __ptext11 02B4  
               __ptext12 00B7        ??_Separar_Valores 0032                 init_ram0 038E  
            ?_ADC_Change 0070                 intlevel1 0000              ?_ADC_Select 0020  
       ___lldiv@dividend 0031              _TMR0_Config 039D         ___lldiv@quotient 0036  
